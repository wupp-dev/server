version: "3.9"

volumes:
  nextcloud:
  # nextcloud-db:
  authentik-db:
    driver: local
  authentik-geoip:
    driver: local
  uptime-kuma:

secrets:
  mariadb_root_password:
    external: true
  nextcloud_db_user:
    external: true
  nextcloud_db_password:
    external: true
  authetik_db_user:
    external: true
  authentik_db_password:
    external: true

services:
  db:
    image: mariadb:10.5
    restart: always
    volumes:
      - ./db:/var/lib/mysql
    secrets:
      - mariadb_root_password
      - nextcloud_db_user
      - nextcloud_db_password
    environment:
      - MARIADB_ROOT_PASSWORD_FILE=/run/secrets/mariadb_root_password
      - MARIADB_USER_FILE=/run/secrets/nextcloud_db_user
      - MARIADB_PASSWORD_FILE=/run/secrets/nextcloud_db_password
      - MARIADB_DATABASE=${NEXTCLOUD_DB_NAME:?nextcloud database name required}
    # entrypoint: |
    #   sh -c "
    #     echo 'CREATE DATABASE IF NOT EXISTS ${GITEA_DATABASE};' > /docker-entrypoint-initdb.d/init.sql;
    #     /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    #   "

  adminer:
    image: adminer
    restart: always
    ports:
      - 8088:8080

  nextcloud:
    image: nextcloud
    restart: always
    ports:
      - 8080:80
    links:
      - db
    volumes:
      - ./nextcloud:/var/www/html
    secrets:
      - nextcloud_db_password
      - nextcloud_db_user
    environment:
      - MYSQL_PASSWORD=/run/secrets/nextcloud_db_password
      - MYSQL_USER=/run/secrets/nextcloud_db_user
      - MYSQL_DATABASE=${NEXTCLOUD_DB_NAME:?nextcloud database name required}
      - MYSQL_HOST=db

  dash:
    image: mauricenino/dashdot:latest
    restart: unless-stopped
    privileged: true
    ports:
      - "7676:3001"
    volumes:
      - /:/mnt/host:ro

  homarr:
    image: ghcr.io/ajnart/homarr:0.9.2
    restart: unless-stopped
    volumes:
      - ./homarr/configs:/app/data/configs
      - ./homarr/icons:/app/public/icons
    ports:
      - "7575:7575"

  authentik-db:
    image: postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - authentik-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=/run/secrets/authentik_db_password
      - POSTGRES_USER=/run/secrets/authentik_db_user
      - POSTGRES_DB=${AUTHENTIK_DB_NAME:?authentik database name required}
    # env_file:
    #   - .env

  authentik-redis:
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s

  authentik-server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.6.1}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-db
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_SECRET_KEY: m39XwRw99dUL76rYIMY6Z7xBLxMLpCJiWHyMnYCpSQWIj4KVqq
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
      # WORKERS: 2
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
      - authentik-geoip:/geoip
    # env_file:
    #   - .env
    ports:
      - 9000:9000
      - 9443:9443

  authentik-worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.6.1}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-db
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
    # This is optional, and can be removed. If you remove this, the following will happen
    # - The permissions for the /media folders aren't fixed, so make sure they are 1000:1000
    # - The docker socket can't be accessed anymore
    user: root
    volumes:
      - ./media:/media
      - ./certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./custom-templates:/templates
      - authentik-geoip:/geoip
    # env_file:
    #   - .env

  authentik-geoipupdate:
    image: "maxmindinc/geoipupdate:latest"
    volumes:
      - "authentik-geoip:/usr/share/GeoIP"
    environment:
      GEOIPUPDATE_EDITION_IDS: "GeoLite2-City"
      GEOIPUPDATE_FREQUENCY: "8"
    # env_file:
    # - .env

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

  uptime-kuma:
    image: louislam/uptime-kuma:1
    restart: always
    volumes:
      - ./uptime-kuma:/app/data
    ports:
      - 3001:3001

  gitea:
    image: gitea/gitea:1.16.8
    environment:
      - USER_UID=${GITEA_USER_UID}
      - USER_GID=${GITEA_USER_GID}
      - GITEA__database__DB_TYPE=mysql
      - GITEA__database__HOST=db:3306
      - GITEA__database__NAME=${GITEA_DATABASE}
      - GITEA__database__USER=${MARIADB_USER}
      - GITEA__database__PASSWD=${MARIADB_PASSWORD}
    restart: always
    volumes:
      - ./gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
      - "222:22"
    depends_on:
      - db
    # env_file:
    #   - .env

  navidrome:
    image: deluan/navidrome:latest
    user: 1000:1000
    restart: always
    volumes:
      - /home/hipy/Music:/music
      - /home/hipy/navidrom/data:/data:rw
    ports:
      - "4533:4533"
    environment:
      - ND_LOGLEVEL=info
