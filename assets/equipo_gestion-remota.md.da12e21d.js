import{_ as e,c as a,o,a as s}from"./app.cd447c9f.js";const n="/server/assets/conexion-ssh.a8a485e1.jpg",r="/server/assets/fallo-vnc.3eb219aa.png",b=JSON.parse('{"title":"Gesti√≥n remota con SSH y VNC","description":"","frontmatter":{"title":"Gesti√≥n remota con SSH y VNC","lang":"es-ES"},"headers":[{"level":2,"title":"Breve introducci√≥n","slug":"breve-introduccion","link":"#breve-introduccion","children":[]},{"level":2,"title":"Uso habitual","slug":"uso-habitual","link":"#uso-habitual","children":[]},{"level":2,"title":"Reinicios y desencriptaci√≥n del disco","slug":"reinicios-y-desencriptacion-del-disco","link":"#reinicios-y-desencriptacion-del-disco","children":[]},{"level":2,"title":"Resolviendo problemas","slug":"resolviendo-problemas","link":"#resolviendo-problemas","children":[]},{"level":2,"title":"Reforzando la seguridad","slug":"reforzando-la-seguridad","link":"#reforzando-la-seguridad","children":[]},{"level":2,"title":"Virtual Network Computing (VNC)","slug":"virtual-network-computing-vnc","link":"#virtual-network-computing-vnc","children":[]}],"relativePath":"equipo/gestion-remota.md","lastUpdated":1672096674000}'),l={name:"equipo/gestion-remota.md"},t=s('<h1 id="gestion-remota-con-ssh-y-vnc" tabindex="-1">Gesti√≥n remota con SSH y VNC <a class="header-anchor" href="#gestion-remota-con-ssh-y-vnc" aria-hidden="true">#</a></h1><p>Esta secci√≥n incluye todas las cosas que hay que hacer en el servidor antes de poder guardarlo, olvidarte de √©l y no volver a necesitar enchufarle un monitor y un teclado para gestionarlo.</p><h2 id="breve-introduccion" tabindex="-1">Breve introducci√≥n <a class="header-anchor" href="#breve-introduccion" aria-hidden="true">#</a></h2><p>Un servidor es un ordenador al que no quieres tenerle conectado ni un monitor ni un teclado <em>(el rat√≥n no existe)</em> porque no deber√≠as tener que tocarlo directamente salvo para el mantenimiento f√≠sico y cambios en la BIOS o en el sistema operativo.</p><p>Pero s√≠ que hay que conectarse a √©l normalmente para instalar y desinstalar software y para configurarlo. Esto lo haremos desde otro ordenador usando el protocolo <em>Secure Shell (SSH)</em>, que nos permitir√° ejecutar comandos en el servidor, transferir archivos y otras cosas m√°s chulas que veremos despu√©s. Todo ello con una conexi√≥n cifrada üòÑ</p><p><img src="'+n+`" alt="Conexi√≥n SSH"></p><p>Es aqu√≠ donde se nos plantea un gran problema: Cuando nos podemos conectar al servidor mediante SSH es cuando est√° encendido <em>(y con los discos desencriptados)</em>, pero ¬øy si no estamos en casa y el ordenador se ha tenido que reiniciar o ha habido un apag√≥n? Entonces el ordenador se quedar√≠a esperando a que pusi√©ramos <em>(¬°con un teclado!)</em> la contrase√±a para desencriptar los discos y as√≠ poder seguir encendi√©ndose. Esto no mola. Deber√≠amos de poder desencriptar el ordenador remotamente tambi√©n para no tener miedo.</p><p>Este problema lo resolveremos tras preparar el servidor para el uso habitual.</p><h2 id="uso-habitual" tabindex="-1">Uso habitual <a class="header-anchor" href="#uso-habitual" aria-hidden="true">#</a></h2><p>Vamos a empezar dejando lista nuestra v√≠a para poder gestionar remotamente el servidor cuando est√© encendido.</p><p>Como lo elegimos a la hora de instalar Debian, el servidor ya viene con OpenSSH Server instalado, que por defecto se ejecuta en el puerto <code>22</code>.</p><div class="warning custom-block"><p class="custom-block-title">ADVERTENCIA</p><p>Es recomendable no usar el puerto 22 para SSH, porque, al ser el puerto por defecto, muchos ataques automatizados solo intentan conectarse a ese puerto, as√≠ que cambi√°ndolo a otro nos ahorraremos posibles problemas. Quien quiera averiguar en qu√© puerto tienes el SSH podr√° hacerlo con un escaneo de puertos igualmente, pero ya tendr√° que querer atacarte a ti en concreto.</p></div><p>Sin embargo, si intentamos conectarnos desde otro ordenador, no nos dejar√°, por dos motivos:</p><ul><li>Tenemos que abrir el puerto en el router.</li><li>Tenemos que permitirlo en el <em>firewall</em> <em>(si tenemos)</em>.</li></ul><p>As√≠ que lo que hay que hacer es primero abrir el puerto SSH en el router y, si tenemos un <em>firewall</em>, permitirlo tambi√©n. <strong>Si no tenemos un <em>firewall</em>, vamos a instalarlo porque es necesario.</strong> Para ello ejecutamos los siguientes comandos:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ sudo apt install ufw</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo ufw allow 22/tcp</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo ufw enable</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Donde <code>22</code> es el puerto de SSH y <code>tcp</code> el protocolo, que puedes leer <a href="https://nordvpn.com/es/blog/protocolo-tcp-udp/" target="_blank" rel="noreferrer">aqu√≠</a> las diferencias entre el protocolo TCP y el UDP. Con esto ya tenemos el <em>firewall</em> configurado para aceptar conexiones SSH.</p><p>Ahora ya nos podr√≠amos conectarnos al servidor desde otro ordenador, pero tendr√≠a que ser con la contrase√±a del usuario administrador, cosa que es poco segura, as√≠ que vamos a utilizar la autenticaci√≥n por claves SSH.</p><p>Para configurarla en el ordenador del que nos vayamos a conectar, seguiremos <a href="https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server" target="_blank" rel="noreferrer">este tutorial</a>. Adem√°s, tiene al final una parte de configuraci√≥n que tambi√©n se debe hacer e incluiremos m√°s adelante en la gu√≠a.</p><h2 id="reinicios-y-desencriptacion-del-disco" tabindex="-1">Reinicios y desencriptaci√≥n del disco <a class="header-anchor" href="#reinicios-y-desencriptacion-del-disco" aria-hidden="true">#</a></h2><p>Por suerte para nosotros, existe un paquete de Debian llamado <code>dropbear-initramfs</code> que nos va a permitir hacer justo lo que queremos. <strong>¬øQu√© es lo que hace?</strong> Pues para eso hay que entender un poco c√≥mo se enciende un ordenador con Linux y los discos encriptados.</p><p>El disco duro realmente no est√° encriptado del todo, tiene una partici√≥n llamada <em>boot</em> que √∫nicamente contiene la informaci√≥n necesaria para decirle al ordenador cuando se intenta encender c√≥mo debe hacerlo. A esto se le llama <code>initramfs</code>, que son los archivos b√°sicos que se cargan en la RAM cuando el ordenador se enciende y, junto con el kernel de Linux, se ocupan de gestionar el encendido. Puedes ver una descripci√≥n m√°s detallada en <a href="https://wiki.ubuntu.com/Initramfs" target="_blank" rel="noreferrer">esta p√°gina</a>.</p><p>Teniendo en cuenta lo anterior, <code>dropbear-initramfs</code> es un software que permite que el servidor reciba conexiones SSH en esta fase del encendido, justo a tiempo para poner la contrase√±a para desencriptar los discos.</p><p>E instalarlo es muy sencillo, solo hay que irse a la terminal del servidor e instalarlo como un paquete normal y corriente escribiendo</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ sudo apt install dropbear-initramfs</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>¬øEso es todo?</strong> Obviamente no, hay que configurarlo.</p><p>Vamos a editar el archivo de configuraci√≥n, que est√° en <code>/etc/dropbear-initramfs/config</code> y vamos a descomentar y editar la l√≠nea:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">DROPBEAR_OPTIONS=&quot;-I 300 -j -k -p 22 -s&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>¬øQu√© significa esto?</p><ul><li><code>-i 300</code> desconecta a quien se conecte si en 300 segundos no ha realizado ninguna acci√≥n.</li><li><code>-j</code> deshabilita la redirecci√≥n de puertos locales.</li><li><code>-k</code> deshabilita la redirecci√≥n de puertos remotos.</li><li><code>-p 22</code> indica que se ejecute en el puerto 22.</li><li><code>-s</code> Deshabilita la autenticaci√≥n por contrase√±a.</li></ul><p>Como indica el √∫ltimo par√°metro, la autenticaci√≥n por contrase√±a est√° deshabilitada, as√≠ que utilizaremos tambi√©n las claves p√∫blicas que hayamos autorizado para OpenSSH Server, podemos copiarlas y hacer que los cambios tengan efecto con los comandos:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ sudo cp /home/admin/.ssh/authorized_keys /etc/dropbear-initramfs/</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo update-initramfs -u</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Esto generar√° de nuevo en la partici√≥n <code>boot</code> los archivos de <code>initramfs</code> incluyendo los cambios que hemos hecho.</p><p><strong>POR HACER:</strong> Cron para la IP en Initramfs.</p><h2 id="resolviendo-problemas" tabindex="-1">Resolviendo problemas <a class="header-anchor" href="#resolviendo-problemas" aria-hidden="true">#</a></h2><p>Un problema con el que nos encontramos cuando intentamos conectarnos al servidor por SSH primero para desencriptar los discos y despu√©s para el uso normal, es que nos salta este error:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span></span>
<span class="line"><span style="color:#A6ACCD;">$ ssh admin@servermamadisimo.xyz</span></span>
<span class="line"><span style="color:#A6ACCD;">=======</span></span>
<span class="line"><span style="color:#A6ACCD;">$ ssh admin@wupp.dev.xyz</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;&gt;&gt;&gt;&gt;&gt;&gt; 19e6119 (Cafe√≠na)</span></span>
<span class="line"><span style="color:#A6ACCD;">=======</span></span>
<span class="line"><span style="color:#A6ACCD;">$ ssh admin@wupp.dev.xyz</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;&gt;&gt;&gt;&gt;&gt;&gt; 0ec50112faf22533fdcc6c2a879a53a907cb5326</span></span>
<span class="line"><span style="color:#A6ACCD;">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span></span>
<span class="line"><span style="color:#A6ACCD;">@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span></span>
<span class="line"><span style="color:#A6ACCD;">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span></span>
<span class="line"><span style="color:#A6ACCD;">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</span></span>
<span class="line"><span style="color:#A6ACCD;">Someone could be eavesdropping on you right now (man-in-the-middle attack)!</span></span>
<span class="line"><span style="color:#A6ACCD;">It is also possible that a host key has just been changed.</span></span>
<span class="line"><span style="color:#A6ACCD;">The fingerprint for the ED25519 key sent by the remote host is</span></span>
<span class="line"><span style="color:#A6ACCD;">SHA256:I9TWN1skf97h/X9sJgevzZT1kZZQ9hFRQadccKljr7I.</span></span>
<span class="line"><span style="color:#A6ACCD;">Please contact your system administrator.</span></span>
<span class="line"><span style="color:#A6ACCD;">Add correct host key in /home/user/.ssh/known_hosts to get rid of this message.</span></span>
<span class="line"><span style="color:#A6ACCD;">Offending ECDSA key in /home/user/.ssh/known_hosts:2</span></span>
<span class="line"><span style="color:#A6ACCD;">  remove with:</span></span>
<span class="line"><span style="color:#A6ACCD;">  ssh-keygen -f &quot;/home/user/.ssh/known_hosts&quot; -R &quot;wupp.dev&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">Host key for wupp.dev has changed and you have requested strict checking.</span></span>
<span class="line"><span style="color:#A6ACCD;">Host key verification failed.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>¬øQu√© es lo que ocurre? Pues que la IP a la que nos estamos conectando es la misma pero las claves p√∫blicas del servidor, que son las que se utilizan para verificar su identidad, son distintas. Esto el ordenador lo confunde <em>(por precauci√≥n)</em> con un intento de suplantaci√≥n de la identidad del servidor, cosa que ser√≠a muy peligrosa en caso de ser cierta. Por eso no nos deja conectarnos.</p><p>Para que nos deje conectarnos es tan sencillo como eliminar el archivo de <code>known_hosts</code> mencionado en el error, pero entonces cada vez que reinici√°semos el servidor tendr√≠amos que estar eliminando ese archivo para poder conectarnos de nuevo y, si de verdad estuviesen intentando suplantar la identidad del servidor, no nos enterar√≠amos.</p><p>Por suerte, hay un apa√±o. Si ponemos Dropbear y OpenSSH Server en puertos distintos en el servidor, podemos utilizar una identidad distinta para cada puerto cuando nos conectemos.</p><div class="danger custom-block"><p class="custom-block-title">PELIGRO</p><p>Una soluci√≥n que se nos podr√≠a ocurrir es utilizar la misma clave p√∫blica y privada para Dropbear y para OpenSSH Server. Esto es una mal√≠sima idea porque la clave privada de OpenSSH Server es algo que quieres protejer m√°s que a tu gato y, por otro lado, la de Dropbear se va a guardar en una parte desencriptada del sistema operativo, porque necesita usarse antes de desencriptar los discos, as√≠ que no est√° muy protegida.</p></div><p>Lo primero para esto es utilizar un puerto distinto para OpenSSH Server al que usamos para Dropbear. Para ello, editamos el archivo <code>/etc/ssh/sshd_config</code> y descomentamos la l√≠nea <code>#Port 22</code> y cambiamos el n√∫mero, quedando por ejemplo <code>Port 2222</code>.</p><p>Antes de reiniciar el servidor SSH, debemos asegurarnos de que:</p><ul><li>El nuevo puerto est√° abierto en el router.</li><li>El nuevo puerto est√° permitido por el firewall, en el caso de UFW: <code>sudo ufw allow 2222/tcp</code>.</li></ul><p><em>Nuevamente el puerto es de ejemplo y es recomendable cambiarlo a otro.</em></p><p>Por √∫ltimo, reiniciamos el servidor SSH para que los cambios tengan efecto:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ sudo systemctl restart ssh</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">RELATO</p><p>Iv√°n mientras escrib√≠a esto <em>(desde un sitio lejano a la ubicaci√≥n del servidor)</em> se olvid√≥ de permitir el nuevo puerto en el firewall y pasaron cosas malas, si quieres leer la historia completa puedes hacerlo <a href="./../relatos/bloqueo-ssh.html">aqu√≠</a>.</p></div><p>A partir de ahora ya no deber√≠amos tener el problema al conectarnos, lo √∫nico que hay que tener en cuenta es que, a la hora de establecer la conexi√≥n SSH, tendremos que indicar el puerto:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ ssh -p 2222 admin@wupp.dev</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="reforzando-la-seguridad" tabindex="-1">Reforzando la seguridad <a class="header-anchor" href="#reforzando-la-seguridad" aria-hidden="true">#</a></h2><p>Todav√≠a tenemos que desactivar el acceso con usuario y contrase√±a por SSH, que es muy poco seguro, para solo permitir el acceso con las claves p√∫blicas permitidas. Vamos a editar el archivo <code>/etc/ssh/sshd_config</code> y a cambiar las siguientes l√≠neas:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">PasswordAuthentication no</span></span>
<span class="line"><span style="color:#A6ACCD;">PermitRootLogin no</span></span>
<span class="line"><span style="color:#A6ACCD;">AllowUsers admin</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Las l√≠neas estar√°n en distintos sitios del archivo de configuraci√≥n, solo hay que descomentarlas y editarlas. Adem√°s, en nuestro caso no aparec√≠a la l√≠nea de <code>AllowUsers</code> para permitir la conexi√≥n solamente hacia ese usuario, as√≠ que la a√±adimos en cualquier parte del archivo. ¬øQu√© significa cada l√≠nea?</p><ul><li><code>PasswordAuthentication no</code> prohibe los accesos con contrase√±a, pudiendo ser √∫nicamente con clave p√∫blica.</li><li><code>PermitRootLogin no</code> evita que se pueda acceder directamente al usuario <code>root</code>.</li><li><code>AllowUsers admin</code> es opcional pero recomendable, restringe los usuarios a los que se puede acceder directamente, se pueden poner varios separ√°ndolos por espacios.</li></ul><div class="warning custom-block"><p class="custom-block-title">ADVERTENCIA</p><p>Antes de hacer efectivos los cambios, tenemos que asegurarnos de que existe el archivo <code>/home/admin/.ssh/authorized_keys</code> y que tiene las claves p√∫blicas de los dispositivos desde los que nos queramos conectar al servidor, porque si no est√°n no podremos conectarnos.</p></div><p>Por √∫tlimo, hacemos efectivos los cambios:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ sudo systemctl restart ssh</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Y ya deber√≠amos de poder conectarnos sin que nos pida la contrase√±a del usuario <code>admin</code>.</p><h2 id="virtual-network-computing-vnc" tabindex="-1">Virtual Network Computing (VNC) <a class="header-anchor" href="#virtual-network-computing-vnc" aria-hidden="true">#</a></h2><p>¬øQu√© mierdas es un VNC? Pues b√°sicamente un entorno gr√°fico de escritorio remoto. Se utiliza para controlar remotamente otros ordenadores con un escritorio como si fuese realmente tu propio ordenador.</p><p>Hemos seguido <a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-vnc-on-debian-10" target="_blank" rel="noreferrer">este tutorial</a>.</p><p>Como detalles, no hemos establecido una contrase√±a para solo vista.</p><p>Aqu√≠ da igual cambiar o no el puerto por defecto, ya que no estar√° expuesto directamente a internet.</p><p>En nuestro ordenador podemos instalar <code>xtightvncviewer</code> para conectarnos. Solo tendremos que conectarnos mediante SSH al servidor indicando que queremos redirigir el puerto 5901 de nuestro ordenador al 5901 del del servidor. Esto lo podemos hacer con <code>ssh -L 5901:127.0.0.1:5901 admin@wupp.dev</code>. Una vez estemos conectados, podemos ejecutar <code>xtightvncviewer</code> desde la terminal, conectarnos a <code>localhost:5901</code> y poner la contrase√±a del VNC.</p><p>En nuestro caso, al intentar conectarnos nos encontramos con el siguiente error:</p><p><img src="`+r+`" alt="Fallo VNC"></p><p>Por suerte, se solucion√≥ instalando un paquete y reiniciando el servidor VNC:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ sudo apt install dbus-x11</span></span>
<span class="line"><span style="color:#A6ACCD;">$ vncserver -kill :1</span></span>
<span class="line"><span style="color:#A6ACCD;">$ vncserver</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Es raro necesitar el servidor VNC, pero justo estoy escribiendo esta parte antes que la de configuraci√≥n de servidor SSH porque necesito abrir unos puertos en el router y para eso necesito acceder con un navegador desde el servidor. Como era de esperar, Debian no ven√≠a con navegador instalado, as√≠ que para poder usar uno con el VNC instalamos Firefox con <code>sudo apt install firefox-esr</code>.</p></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Invalid code snippet option</span></span></code></pre></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Invalid code snippet option</span></span></code></pre></div><p>=======</p><p>Importante no olvidar hacer que el servidor VNC se ejecute cada vez que el servidor se encienda, si no, tendremos que ejecutarlo manualmente antes de conectarnos.</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>efd50a2 (Historieta) =======</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><p>Importante no olvidar hacer que el servidor VNC se ejecute cada vez que el servidor se encienda, si no, tendremos que ejecutarlo manualmente antes de conectarnos.</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>0ec50112faf22533fdcc6c2a879a53a907cb5326</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote>`,77),i=[t];function c(p,d,u,m,h,v){return o(),a("div",null,i)}const y=e(l,[["render",c]]);export{b as __pageData,y as default};
