import{_ as s,c as a,o as e,V as i}from"./chunks/framework.iBR-t56Y.js";const n="/server/assets/conexion-ssh.ZKSptxPd.jpg",o="/server/assets/fallo-vnc.n5viH_QC.png",y=JSON.parse('{"title":"Gesti√≥n remota con SSH y VNC","description":"","frontmatter":{"title":"Gesti√≥n remota con SSH y VNC","lang":"es-ES"},"headers":[],"relativePath":"equipo/gestion-remota.md","filePath":"equipo/gestion-remota.md","lastUpdated":1707127790000}'),t={name:"equipo/gestion-remota.md"},l=i(`<h1 id="gestion-remota-con-ssh-y-vnc" tabindex="-1">Gesti√≥n remota con SSH y VNC <a class="header-anchor" href="#gestion-remota-con-ssh-y-vnc" aria-label="Permalink to &quot;Gesti√≥n remota con SSH y VNC&quot;">‚Äã</a></h1><p>Esta secci√≥n incluye todas las cosas que hay que hacer en el servidor antes de poder guardarlo, olvidarte de √©l y no volver a necesitar enchufarle un monitor y un teclado para gestionarlo.</p><h2 id="breve-introduccion" tabindex="-1">Breve introducci√≥n <a class="header-anchor" href="#breve-introduccion" aria-label="Permalink to &quot;Breve introducci√≥n&quot;">‚Äã</a></h2><p>Un servidor es un ordenador al que no quieres tenerle conectado ni un monitor ni un teclado <em>(el rat√≥n no existe)</em> porque no deber√≠as tener que tocarlo directamente salvo para el mantenimiento f√≠sico y cambios en la BIOS o en el sistema operativo.</p><p>Pero s√≠ que hay que conectarse a √©l habitualmente para instalar y desinstalar software y para configurarlo. Esto lo haremos desde otro dispositivo usando el protocolo <em>Secure Shell (SSH)</em>, que nos permitir√° ejecutar comandos en el servidor, transferir archivos y otras cosas m√°s chulas que veremos despu√©s. Todo ello con una conexi√≥n cifrada üòÑ</p><p>Es aqu√≠ donde se nos plantea un gran problema: Cuando nos podemos conectar al servidor mediante SSH es cuando est√° encendido <em>(y con los discos desencriptados)</em>, pero ¬øy si no estamos en casa y el ordenador se ha tenido que reiniciar o ha habido un apag√≥n? Entonces el ordenador se quedar√≠a esperando a que pusi√©ramos <em>(¬°con un teclado!)</em> la contrase√±a para desencriptar los discos y as√≠ poder seguir encendi√©ndose. Eso no mola. Deber√≠amos de poder desencriptar el ordenador remotamente tambi√©n para no tener miedo.</p><p>Este problema lo resolveremos tras preparar el servidor para el uso habitual.</p><div class="warning custom-block"><p class="custom-block-title">ADVERTENCIA</p><p>Aunque estoy seguro de que es por culpa del router que usamos. En nuestro caso, si el servidor no tiene ning√∫n tipo de interacci√≥n a trav√©s de internet durante unos minutos, el router deja de permitir conexiones a √©l. Para ahorrarnos el disgusto de intentar conectarnos y descubrir que el router no nos lo va a permitir porque el servidor haya estado &quot;inactivo&quot;, tendremos que forzar una actividad peri√≥dica m√≠nima (como hacer un ping) tanto cuando el ordenador est√© encendido como cuando est√© esperando a que se introduzca la contrase√±a para desencriptar los discos.</p></div><h2 id="uso-habitual" tabindex="-1">Uso habitual <a class="header-anchor" href="#uso-habitual" aria-label="Permalink to &quot;Uso habitual&quot;">‚Äã</a></h2><p>Vamos a empezar dejando lista nuestra v√≠a para poder gestionar remotamente el servidor cuando est√© encendido.</p><p>Como lo elegimos a la hora de instalar Debian, el servidor ya viene con OpenSSH Server instalado, que por defecto se ejecuta en el puerto <code>22</code>.</p><div class="warning custom-block"><p class="custom-block-title">ADVERTENCIA</p><p>Es recomendable no usar el puerto 22 para SSH, porque, al ser el puerto por defecto, muchos ataques automatizados solo intentan conectarse a ese puerto, as√≠ que cambi√°ndolo a otro nos ahorraremos posibles problemas. Quien quiera averiguar en qu√© puerto tienes el SSH podr√° hacerlo con un escaneo de puertos igualmente, pero ya tendr√° que querer atacarte a ti en concreto.</p></div><p>Sin embargo, si intentamos conectarnos desde otro ordenador, no nos dejar√°, por dos motivos:</p><ul><li>Tenemos que abrir el puerto en el router.</li><li>Tenemos que permitirlo en el firewall <em>(si tenemos)</em>.</li></ul><p>As√≠ que lo que hay que hacer es primero abrir el puerto SSH en el router y, si tenemos un firewall, permitirlo tambi√©n. <strong>Si no tenemos un firewall, vamos a instalarlo porque es necesario.</strong> Para ello ejecutamos los siguientes comandos:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt install ufw</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw allow </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tcp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw enable</span></span></code></pre></div><p>Donde <code>22</code> es el puerto de SSH y <code>tcp</code> el protocolo, que puedes leer <a href="https://nordvpn.com/es/blog/protocolo-tcp-udp/" target="_blank" rel="noreferrer">aqu√≠</a> las diferencias entre el protocolo TCP y el UDP. Con esto ya tenemos el firewall configurado para aceptar conexiones SSH.</p><p>Ahora ya podr√≠amos conectarnos al servidor desde otro ordenador, pero tendr√≠a que ser con la contrase√±a del usuario administrador, cosa que es poco segura, as√≠ que vamos a utilizar la autenticaci√≥n por claves SSH.</p><p><img src="`+n+`" alt="Conexi√≥n SSH"></p><p>Para configurarlo en el ordenador del que nos vayamos a conectar, seguiremos <a href="https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server" target="_blank" rel="noreferrer">este tutorial</a>. Adem√°s, tiene al final una parte de configuraci√≥n que tambi√©n se debe hacer y viene incluido m√°s adelante en la gu√≠a.</p><h2 id="reinicios-y-desencriptacion-del-disco" tabindex="-1">Reinicios y desencriptaci√≥n del disco <a class="header-anchor" href="#reinicios-y-desencriptacion-del-disco" aria-label="Permalink to &quot;Reinicios y desencriptaci√≥n del disco&quot;">‚Äã</a></h2><p>Para solucionar el problema que planteamos antes, existe un paquete de Debian llamado <code>dropbear-initramfs</code> que nos va a permitir hacer justo lo que queremos. <strong>¬øQu√© es lo que hace?</strong> Pues para eso hay que entender un poco c√≥mo se enciende un ordenador con Linux y los discos encriptados.</p><p>El disco duro realmente no est√° encriptado del todo, tiene una partici√≥n llamada boot que √∫nicamente contiene la informaci√≥n necesaria para decirle al ordenador cuando se intenta encender c√≥mo debe hacerlo. Aqu√≠ entra el sistema <code>initrd</code>, que son los archivos b√°sicos que se cargan en la RAM cuando el ordenador se enciende y que, junto con el kernel de Linux, se ocupan de gestionar el encendido. Puedes ver una descripci√≥n m√°s detallada en <a href="https://wiki.ubuntu.com/Initramfs" target="_blank" rel="noreferrer">esta p√°gina</a>.</p><p>Teniendo en cuenta lo anterior, <code>dropbear-initramfs</code> es un software que permite que el servidor reciba conexiones SSH en esta fase del encendido, justo a tiempo para poner la contrase√±a para desencriptar los discos.</p><p>Instalarlo es muy sencillo, solo hay que irse a la terminal del servidor e instalarlo como un paquete normal y corriente escribiendo</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt install dropbear-initramfs</span></span></code></pre></div><p><strong>¬øEso es todo?</strong> Obviamente no, hay que configurarlo.</p><p>Vamos a editar el archivo de configuraci√≥n, que est√° en <code>/etc/dropbear/initramfs/dropbear.conf</code> y vamos a descomentar y editar la l√≠nea:</p><div class="language-ssh-config vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssh-config</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DROPBEAR_OPTIONS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=&quot;-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">I</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -j -k -p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -s&quot;</span></span></code></pre></div><p>¬øQu√© significa esto?</p><ul><li><code>-i 300</code> desconecta a quien en 300 segundos no ha realizado ninguna acci√≥n.</li><li><code>-j</code> deshabilita la redirecci√≥n de puertos locales.</li><li><code>-k</code> deshabilita la redirecci√≥n de puertos remotos.</li><li><code>-p 22</code> indica que se ejecute en el puerto 22.</li><li><code>-s</code> deshabilita la autenticaci√≥n por contrase√±a.</li></ul><p>Como indica el √∫ltimo par√°metro, la autenticaci√≥n por contrase√±a est√° deshabilitada, as√≠ que utilizaremos tambi√©n las claves p√∫blicas que hayamos autorizado para OpenSSH Server, podemos copiarlas y hacer que los cambios tengan efecto con los comandos:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp /home/admin/.ssh/authorized_keys /etc/dropbear-initramfs/etc/dropbear/initramfs/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update-initramfs -u</span></span></code></pre></div><p>Esto generar√° de nuevo en la partici√≥n <code>boot</code> los archivos de <code>initramfs</code> incluyendo los cambios que hemos hecho.</p><div class="tip custom-block"><p class="custom-block-title">RELATO</p><p>Tras esto descubr√≠ que si el ordenador permanec√≠a mucho tiempo encendido sin que nadie se conectase para desencriptar los discos, dejaba de ser accesible a trav√©s de la IP p√∫blica o el dominio (aunque s√≠ era posible acceder a trav√©s de la IP local). Al principio pens√© que era porque hab√≠a que configurar la IP fija en <code>initramfs</code>, pero al intentar hacerlo, como el router ya ten√≠a fijada la IP, se hac√≠an un l√≠o y no funcionaba. Al final se solucion√≥ al poner tambi√©n ah√≠ el dominio a actualizarse, que es justo lo que viene ahora en la gu√≠a.</p></div><h3 id="¬øy-que-pasa-con-el-dominio" tabindex="-1">¬øY qu√© pasa con el dominio? <a class="header-anchor" href="#¬øy-que-pasa-con-el-dominio" aria-label="Permalink to &quot;¬øY qu√© pasa con el dominio?&quot;">‚Äã</a></h3><p>¬øNo podr√≠a ocurrir que, mientras el ordenador est√° esperando a que alguien se conecte para desencriptar los discos, la IP p√∫blica cambie? Pues ser√≠a raro, pero podr√≠a ocurrir. Y no nos conviene, as√≠ que vamos a prevenir que eso pueda pasar.</p><p>El objetivo es crear una tarea de <code>crontab</code> para ir actualizando la IP cada cierto tiempo durante el encendido. El primer problema que nos encontramos para esto es que los comandos disponibles cuando estamos en <code>√¨nitramfs</code> son muy pocos y no incluyen <code>crontab</code>. Concretamente, los comandos que hay disponibles son una versi√≥n reducida de <a href="https://busybox.net/" target="_blank" rel="noreferrer">BusyBox</a> y para poder usar <code>crontab</code> necesitamos la versi√≥n completa.</p><p><code>initramfs</code> utiliza la versi√≥n de BusyBox que haya instalada en Debian, as√≠ que tenemos que cambiarla escribiendo <code>sudo apt install busybox-static</code>, que reemplazar√° a la anterior y se incluir√° autom√°ticamente en <code>initramfs</code>.</p><div class="danger custom-block"><p class="custom-block-title">PELIGRO</p><p>Aunque seguramente no sea el caso, puede ser que al hacer esto se cree una incompatibilidad entre la nueva versi√≥n de BusyBox y el resto de componentes de <code>initramfs</code>, haciendo que el servidor no pueda encenderse, as√≠ que recomiendo hacer una copia de seguridad por si algo sale mal.</p></div><p>Despu√©s de esto <code>crontab</code> ya estar√° disponible, pero no funcionar√° porque en <code>initramfs</code> el directorio donde se guarda por defecto el archivo con los comandos no existe. La forma de resolverlo es creando el archivo <code>/usr/share/initramfs-tools/hooks/crontab</code> con este contenido:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/sh -e</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;prereqs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/initramfs-tools/hook-functions</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $DESTDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $DESTDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/spool</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $DESTDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/spool/cron</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $DESTDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/spool/cron/crontabs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/initramfs-tools/crontab </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$DESTDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/spool/cron/crontabs/root</span></span></code></pre></div><p>Escribimos <code>sudo chmod +x /usr/share/initramfs-tools/hooks/crontab</code> para hacer el archivo ejecutable y esto lo que har√° es crear el directorio y copiar un archivo con la configuraci√≥n de <code>crontab</code> que vamos a crear ahora mismo. Escribimos en <code>/usr/share/initramfs-tools/crontab</code> la l√≠nea necesaria para actualizar √∫nicamente <code>wupp.dev</code>, ya que el resto de subdominios nos da igual que se actualicen ahora si no van a poder usarse porque el ordenador no est√° completamente encendido:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>1,6,11,16,21,26,31,36,41,46,51,56 * * * * sleep 46 ; wget --no-check-certificate -qO- ipinfo.io/ip -O - | xargs -I {} wget --no-check-certificate -qO- &quot;https://dynamicdns.park-your-domain.com/update?host=@&amp;domain=wupp.dev&amp;password=passwd&amp;ip={}&quot; &gt; /tmp/dnsupdate.log 2&gt;&amp;1 &amp;</span></span></code></pre></div><p>Cada vez que ejecutemos <code>sudo update-initramfs -u</code> se volver√° a crear el directorio y a copiar el archivo, con lo que tambi√©n nos aseguraremos de que si cambiamos el archivo tambi√©n se cambiar√° en <code>initramfs</code>, aunque no inmediatamente.</p><p>Sin embargo, aunque ya podemos usar <code>crontab</code> en <code>initramfs</code>, nos falta hacer que se empiece a ejecutar, as√≠ que tenemos que crear otro archivo que se encargue de iniciar <code>crond</code>, que ejecutar√° lo que haya en <code>crontab</code>. Ese archivo ser√° <code>/usr/share/initramfs-tools/scripts/init-premount/crond</code> y tendr√° este contenido:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start crond</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PREREQ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;busybox&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prereqs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PREREQ</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">case</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prereqs)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        prereqs</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">esac</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /scripts/functions</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crond</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span></code></pre></div><p>Que no se nos olvide hacer el archivo ejecutable escribiendo <code>sudo chmod +x /usr/share/initramfs-tools/scripts/init-premount/crond</code>.</p><p>Genial, ahora si probamos a reiniciar el ordenador nos encontraremos con otro problema, y es que la resoluci√≥n de dominios no funciona. Podemos comprobarlo con un comando tan sencillo como <code>wget google.com</code>, que nos dar√° un error.</p><div class="tip custom-block"><p class="custom-block-title">RELATO</p><p>La informaci√≥n que hay en internet sobre c√≥mo hacer funcionar la resoluci√≥n de dominios en <code>initramfs</code> es casi nula, as√≠ que la forma en la que lo conseguimos fue con varias pruebas que puedes consultar <a href="./../relatos/dns-initramfs.html">aqu√≠</a>.</p></div><p>Para arreglarlo, crearemos un √∫ltimo archivo <code>/usr/share/initramfs-tools/hooks/dns</code> con el contenido:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/sh -e</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;prereqs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/initramfs-tools/hook-functions</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/lib/x86_64-linux-gnu/libnss_dns.so.2 </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$DESTDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/usr/lib/x86_64-linux-gnu/libnss_dns.so.2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/resolv.conf </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$DESTDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/resolv.conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/host.conf </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$DESTDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/host.conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/hosts </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$DESTDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/hosts</span></span></code></pre></div><p>Y lo hacemos ejecutable con <code>sudo chmod +x /usr/share/initramfs-tools/hooks/dns</code>. Hecho esto ejecutamos una √∫ltima vez <code>sudo update-initramfs -u</code> y ya estar√≠a.</p><h2 id="resolviendo-problemas" tabindex="-1">Resolviendo problemas <a class="header-anchor" href="#resolviendo-problemas" aria-label="Permalink to &quot;Resolviendo problemas&quot;">‚Äã</a></h2><p>Un problema con el que nos encontramos cuando intentamos conectarnos al servidor por SSH primero para desencriptar los discos y despu√©s para el uso normal, es que nos salta este error tras escribir <code>ssh admin@wupp.dev</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span></span>
<span class="line"><span>@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span></span>
<span class="line"><span>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span></span>
<span class="line"><span>IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</span></span>
<span class="line"><span>Someone could be eavesdropping on you right now (man-in-the-middle attack)!</span></span>
<span class="line"><span>It is also possible that a host key has just been changed.</span></span>
<span class="line"><span>The fingerprint for the ED25519 key sent by the remote host is</span></span>
<span class="line"><span>SHA256:I9TWN1skf97h/X9sJgevzZT1kZZQ9hFRQadccKljr7I.</span></span>
<span class="line"><span>Please contact your system administrator.</span></span>
<span class="line"><span>Add correct host key in /home/user/.ssh/known_hosts to get rid of this message.</span></span>
<span class="line"><span>Offending ECDSA key in /home/user/.ssh/known_hosts:2</span></span>
<span class="line"><span>  remove with:</span></span>
<span class="line"><span>  ssh-keygen -f &quot;/home/user/.ssh/known_hosts&quot; -R &quot;wupp.dev&quot;</span></span>
<span class="line"><span>Host key for wupp.dev has changed and you have requested strict checking.</span></span>
<span class="line"><span>Host key verification failed.</span></span></code></pre></div><p>¬øQu√© es lo que ocurre? Pues que la IP a la que nos estamos conectando es la misma pero las claves p√∫blicas del servidor, que son las que se utilizan para verificar su identidad, son distintas. Esto el ordenador lo confunde <em>(por precauci√≥n)</em> con un intento de suplantaci√≥n de la identidad del servidor, cosa que ser√≠a muy peligrosa en caso de ser cierta. Por eso no nos deja conectarnos.</p><p>Para que nos deje conectarnos es tan sencillo como eliminar el archivo de <code>known_hosts</code> mencionado en el error, pero entonces cada vez que reinici√°semos el servidor tendr√≠amos que estar eliminando ese archivo para poder conectarnos de nuevo y, si de verdad estuviesen intentando suplantar la identidad del servidor, no nos enterar√≠amos.</p><p>Por suerte, hay un apa√±o. Si ponemos Dropbear y OpenSSH Server en puertos distintos en el servidor, podemos utilizar una identidad distinta para cada puerto cuando nos conectemos.</p><div class="danger custom-block"><p class="custom-block-title">PELIGRO</p><p>Una soluci√≥n que se nos podr√≠a ocurrir es utilizar la misma clave p√∫blica y privada para Dropbear y para OpenSSH Server. Esto es una mal√≠sima idea porque la clave privada de OpenSSH Server es algo que quieres proteger m√°s que a tu gato y, por otro lado, la de Dropbear se va a guardar en una parte desencriptada del sistema operativo, porque necesita usarse antes de desencriptar los discos, as√≠ que no est√° muy protegida.</p></div><p>Lo primero para esto es utilizar un puerto distinto para OpenSSH Server al que usamos para Dropbear. Para ello, editamos el archivo <code>/etc/ssh/sshd_config</code> y descomentamos la l√≠nea <code>#Port 22</code> y cambiamos el n√∫mero, quedando por ejemplo <code>Port 2222</code>.</p><p>Antes de reiniciar el servidor SSH, debemos asegurarnos de que:</p><ul><li>El nuevo puerto est√° abierto en el router.</li><li>El nuevo puerto est√° permitido por el firewall, en el caso de UFW: <code>sudo ufw allow 2222/tcp</code>.</li></ul><p><em>Nuevamente el puerto es de ejemplo y es recomendable cambiarlo a otro.</em></p><p>Por √∫ltimo, reiniciamos el servidor SSH para que los cambios tengan efecto:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl restart ssh</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">RELATO</p><p>Iv√°n mientras escrib√≠a esto <em>(desde un sitio lejano a la ubicaci√≥n del servidor)</em> se olvid√≥ de permitir el nuevo puerto en el firewall y pasaron cosas malas, si quieres leer la historia completa puedes hacerlo <a href="./../relatos/bloqueo-ssh.html">aqu√≠</a>.</p></div><p>A partir de ahora ya no deber√≠amos tener el problema al conectarnos, lo √∫nico que hay que tener en cuenta es que, a la hora de establecer la conexi√≥n SSH, tendremos que indicar el puerto:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2222</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admin@wupp.dev</span></span></code></pre></div><h2 id="reforzando-la-seguridad" tabindex="-1">Reforzando la seguridad <a class="header-anchor" href="#reforzando-la-seguridad" aria-label="Permalink to &quot;Reforzando la seguridad&quot;">‚Äã</a></h2><p>Todav√≠a tenemos que desactivar el acceso con usuario y contrase√±a por SSH, que es muy poco seguro, para solo permitir el acceso con las claves p√∫blicas permitidas. Vamos a editar el archivo <code>/etc/ssh/sshd_config</code> y a cambiar las siguientes l√≠neas:</p><div class="language-ssh-config vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssh-config</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PasswordAuthentication</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> no</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PermitRootLogin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> no</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AllowUsers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> admin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">X11Forwarding</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> no</span></span></code></pre></div><p>Las l√≠neas estar√°n en distintos sitios del archivo de configuraci√≥n, solo hay que descomentarlas y editarlas. Adem√°s, en nuestro caso no aparec√≠a la l√≠nea de <code>AllowUsers</code> para permitir la conexi√≥n solamente hacia ese usuario, as√≠ que la a√±adimos en cualquier parte del archivo. ¬øQu√© significa cada l√≠nea?</p><ul><li><code>PasswordAuthentication no</code> proh√≠be los accesos con contrase√±a, pudiendo ser √∫nicamente con clave p√∫blica.</li><li><code>PermitRootLogin no</code> evita que se pueda acceder directamente al usuario <code>root</code>.</li><li><code>AllowUsers admin</code> es opcional pero recomendable, restringe los usuarios a los que se puede acceder directamente, se pueden poner varios separ√°ndolos por espacios.</li><li><code>X11Forwarding no</code> evita que se puedan ejecutar aplicaciones gr√°ficas de forma remota, pues es algo que en un principio no vamos a usar.</li></ul><div class="warning custom-block"><p class="custom-block-title">ADVERTENCIA</p><p>Antes de hacer efectivos los cambios, tenemos que asegurarnos de que existe el archivo <code>/home/admin/.ssh/authorized_keys</code> y que tiene las claves p√∫blicas de los dispositivos desde los que nos queramos conectar al servidor, porque si no est√°n no podremos conectarnos.</p></div><p>Por √∫ltimo, hacemos efectivos los cambios:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl restart ssh</span></span></code></pre></div><p>Y ya deber√≠amos de poder conectarnos sin que nos pida la contrase√±a del usuario <code>admin</code>.</p><h2 id="virtual-network-computing-vnc" tabindex="-1">Virtual Network Computing (VNC) <a class="header-anchor" href="#virtual-network-computing-vnc" aria-label="Permalink to &quot;Virtual Network Computing (VNC)&quot;">‚Äã</a></h2><p>¬øQu√© mierdas es un VNC? Pues b√°sicamente un entorno gr√°fico de escritorio remoto. Se utiliza para controlar remotamente otros ordenadores con un escritorio como si fuese realmente tu propio ordenador. ¬øNo acabamos de desactivar eso en la configuraci√≥n del servidor SSH? Pues s√≠, pero vamos a usarlo de otra forma que es m√°s segura y no necesita esa opci√≥n activada.</p><p>Hemos seguido <a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-vnc-on-debian-10" target="_blank" rel="noreferrer">este tutorial</a>.</p><p>Como detalles, no hemos establecido una contrase√±a para solo vista.</p><p>Aqu√≠ da igual cambiar o no el puerto por defecto, ya que no estar√° expuesto directamente a internet.</p><p>En nuestro ordenador podemos instalar <code>xtightvncviewer</code> para conectarnos. Solo tendremos que conectarnos mediante SSH al servidor indicando que queremos redirigir el puerto 5901 de nuestro ordenador al 5901 del del servidor. Esto lo podemos hacer con <code>ssh -L 5901:127.0.0.1:5901 admin@wupp.dev</code>. Una vez estemos conectados, podemos ejecutar <code>xtightvncviewer</code> desde la terminal, conectarnos a <code>localhost:5901</code> y poner la contrase√±a del VNC.</p><p>En nuestro caso, al intentar conectarnos nos encontramos con el siguiente error:</p><p><img src="`+o+`" alt="Fallo VNC"></p><p>Por suerte, se solucion√≥ instalando un paquete y reiniciando el servidor VNC:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt install dbus-x11</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl restart vncserver@1</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Es raro necesitar el servidor VNC, pero justo estoy escribiendo esta parte antes que la de configuraci√≥n de servidor SSH porque necesito abrir unos puertos en el router y para eso necesito acceder con un navegador desde el servidor. Como era de esperar, Debian no ven√≠a con navegador instalado, as√≠ que para poder usar uno con el VNC instalamos Firefox con <code>sudo apt install firefox-esr</code>.</p></div><h2 id="ssh-file-transfer-protocol-sftp" tabindex="-1">SSH File Transfer Protocol (SFTP) <a class="header-anchor" href="#ssh-file-transfer-protocol-sftp" aria-label="Permalink to &quot;SSH File Transfer Protocol (SFTP)&quot;">‚Äã</a></h2><p>A veces necesitaremos transferir archivos entre nuestro ordenador y el servidor. La forma m√°s c√≥moda de hacer eso es a trav√©s de SFTP, para lo cual solo necesitaremos tener instalado un cliente como <a href="https://filezilla-project.org/" target="_blank" rel="noreferrer">Filezilla</a> en nuestro ordenador.</p><p>Para activar SFTP en el servidor desde el usuario <code>admin</code>, simplemente tendremos que comentar una l√≠nea y a√±adir otra en <code>/etc/ssh/sshd_config</code>:</p><div class="language-ssh-config vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssh-config</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#Subsystem      sftp    /usr/lib/openssh/sftp-server</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Subsystem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       sftp    internal-sftp</span></span></code></pre></div><p>Y reiniciar el servicio con <code>sudo systemctl restart ssh</code>.</p><p>Si todo va bien, ya podremos conectarnos desde Filezilla (usando nuestra clave privada, aunque antes habr√° que importarla en el programa y que nos la convierta a un formato compatible) al puerto SSH del servidor y transferir archivos.</p><h2 id="embelleciendo" tabindex="-1">Embelleciendo <a class="header-anchor" href="#embelleciendo" aria-label="Permalink to &quot;Embelleciendo&quot;">‚Äã</a></h2><p>Cuando iniciamos sesi√≥n por SSH nos aparece un mensaje como este:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Linux server 5.10.0-21-amd64 #1 SMP Debian 5.10.162-1 (2023-01-21) x86_64</span></span>
<span class="line"><span></span></span>
<span class="line"><span>The programs included with the Debian GNU/Linux system are free software;</span></span>
<span class="line"><span>the exact distribution terms for each program are described in the</span></span>
<span class="line"><span>individual files in /usr/share/doc/*/copyright.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span></span>
<span class="line"><span>permitted by applicable law.</span></span>
<span class="line"><span>Last login: Mon May 24 01:23:45 2032 from 192.168.1.1</span></span></code></pre></div><p>Que no es muy bonito la verdad, as√≠ que podemos hacer unos cambios para que quede un mensaje mucho m√°s lindo.</p><ol><li>Editamos <code>/etc/ssh/sshd_config</code> para poner los siguientes ajustes:</li></ol><div class="language-ssh-config vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssh-config</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PrintMotd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> no</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PrintLastLog</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> no</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Banner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> none</span></span></code></pre></div><ol start="2"><li>Quitamos el resto del mensaje de bienvenida con <code>sudo truncate -s 0 /etc/motd</code>.</li><li>Editamos <code>/etc/pam.d/sshd</code> para asegurarnos de que las siguientes l√≠neas est√°n comentadas:</li></ol><div class="language-ssh-config vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ssh-config</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Print the message of the day upon successful login.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This includes a dynamically generated part from /run/motd.dynamic</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># and a static (admin-editable) part from /etc/motd.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#session    optional     pam_motd.so  motd=/run/motd.dynamic</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#session    optional     pam_motd.so noupdate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Print the status of the user&#39;s mailbox upon successful login.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#session    optional     pam_mail.so standard noenv # [1]</span></span></code></pre></div><ol start="4"><li>Instalamos <code>figlet</code> y <code>lolcat</code> para tener colores y cabeceras personalizadas <code>sudo apt update &amp;&amp; sudo apt install figlet lolcat</code>.</li><li>Creamos el archivo <code>~/welcome_message.sh</code>:</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Cabecera personalizada</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;WUPP . DEV&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> figlet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lolcat</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># √öltima conexi√≥n</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">last_login</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">last</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -F</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $USER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">login_time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $last_login</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $5 &quot; &quot; $6 &quot; &quot; $7 &quot; &quot; $8}&#39;)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\e[1;33m√öltima conexi√≥n:\\e[0m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $login_time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Informaci√≥n del uso del sistema</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\e[1;33mUso del CPU:\\e[0m&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;cpu &#39; /proc/stat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{usage=($2+$4)*100/($2+$4+$5)} END {print usage &quot;%&quot;}&#39;)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\e[1;33mUso de memoria:\\e[0m&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">free</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;NR==2{printf &quot;%.2f%%\\t\\t&quot;, $3*100/$2 }&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Espacio en disco</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\e[1;33mEspacio en disco:\\e[0m&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">df</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;^tmpfs|udev&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $1 &quot;\\t&quot; $5 &quot;\\t&quot; $6}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> column</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lolcat</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span></span></code></pre></div><ol start="6"><li>Hacemos el archivo ejecutable <code>sudo chmod +x ~/welcome_message.sh</code> y lo a√±adimos a <code>~/.bashrc</code>:</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ~/.bashrc: executed by bash(1) for non-login shells.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># for examples</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add the welcome message</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/welcome_message.sh</span></span></code></pre></div><ol start="7"><li>Reiniciamos el servicio de SSH <code>sudo systemctl restart ssh</code>, nos desconectamos y nos volvemos a conectar para comprobar que funciona.</li></ol>`,108),r=[l];function p(d,c,h,u,k,m){return e(),a("div",null,r)}const F=s(t,[["render",p]]);export{y as __pageData,F as default};
