import{_ as s,c as a,o as e,V as n}from"./chunks/framework.iBR-t56Y.js";const u=JSON.parse('{"title":"Docker Mailserver","description":"","frontmatter":{"title":"Docker Mailserver","lang":"es-ES"},"headers":[],"relativePath":"servicios/mailserver.md","filePath":"servicios/mailserver.md","lastUpdated":1707127790000}'),i={name:"servicios/mailserver.md"},p=n(`<h1 id="docker-mailserver-correo-electronico" tabindex="-1">Docker Mailserver - Correo electrónico <a class="header-anchor" href="#docker-mailserver-correo-electronico" aria-label="Permalink to &quot;Docker Mailserver - Correo electrónico&quot;">​</a></h1><p>Tener un correo funcionando en un servidor es una tarea compleja porque un servidor de correo no se compone únicamente de un programa, suelen ser muchos que trabajan entre sí. Es por eso que, tras ver las opciones disponibles, decidimos utilizar <a href="https://github.com/docker-mailserver/docker-mailserver" target="_blank" rel="noreferrer">Docker Mailserver</a>, que (a parte de ser obviamente un servicio para docker) viene con varios complementos y tiene una instalación muy sencilla.</p><p>Hemos seguido <a href="https://docker-mailserver.github.io/docker-mailserver/latest/usage" target="_blank" rel="noreferrer">la documentación</a>, pero dejamos por aquí todos los pasos.</p><h2 id="dominio-y-router" tabindex="-1">Dominio y router <a class="header-anchor" href="#dominio-y-router" aria-label="Permalink to &quot;Dominio y router&quot;">​</a></h2><p>Lo primero que tenemos que hacer es añadir un registro <code>MX</code> al dominio base <code>wupp.dev</code> que apunte al subdominio que crearemos para el correo <code>mail.wupp.dev</code>. En el caso de FreeDNS, nos pide también una prioridad, así que pusimos <code>10:mail.wupp.dev</code> en el registro <code>MX</code>.</p><p>Después, creamos un registro <code>A</code> con el subdominio <code>mail.wupp.dev</code> y la IP del servidor.</p><p>Por último, tendremos que irnos al router y abrir los puertos <code>25</code>, <code>143</code>, <code>465</code>, <code>587</code> y <code>993</code>, que serán los usados por el correo tanto entrante como saliente.</p><h2 id="nginx-y-docker-compose" tabindex="-1">Nginx y docker-compose <a class="header-anchor" href="#nginx-y-docker-compose" aria-label="Permalink to &quot;Nginx y docker-compose&quot;">​</a></h2><p>En el <code>docker-compose.ylm</code> añadimos la <a href="https://github.com/docker-mailserver/docker-mailserver/blob/master/compose.yaml" target="_blank" rel="noreferrer">configuración de ejemplo que tienen en el repositorio</a>:</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  mailserver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mailserver/docker-mailserver</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mailserver</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    env_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mailserver.env</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;25:25&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # SMTP  (explicit TLS =&gt; STARTTLS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;143:143&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # IMAP4 (explicit TLS =&gt; STARTTLS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;465:465&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # ESMTP (implicit TLS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;587:587&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # ESMTP (explicit TLS =&gt; STARTTLS)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;993:993&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # IMAP4 (implicit TLS)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/dms/mail-data/:/var/mail/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/dms/mail-state/:/var/mail-state/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/dms/mail-logs/:/var/log/mail/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/dms/config/:/tmp/docker-mailserver/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/localtime:/etc/localtime:ro</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/letsencrypt:/etc/letsencrypt</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mail.wupp.dev</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    stop_grace_period</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1m</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    cap_add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NET_ADMIN</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    healthcheck</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ss --listening --tcp | grep -P &#39;LISTEN.+:smtp&#39; || exit 1&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3s</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      retries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span></code></pre></div><p>Y creamos un archivo junto al <code>docker-compose.yml</code> con también la <a href="https://github.com/docker-mailserver/docker-mailserver/blob/master/mailserver.env" target="_blank" rel="noreferrer">configuración por defecto del repositorio</a> <code>mailserver.env</code>.</p><p>Por la longitud del archivo, me limitaré a especificar los cambios realizados en el archivo:</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>TZ=Europe/Madrid</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SPOOF_PROTECTION=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ENABLE_OPENDKIM=0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ENABLE_OPENDMARC=0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ENABLE_POLICYD_SPF=0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ENABLE_CLAMAV=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ENABLE_RSPAMD=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>RSPAMD_LEARN=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>RSPAMD_GREYLISTING=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ENABLE_AMAVIS=0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ENABLE_FAIL2BAN=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SSL_TYPE=letsencrypt</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DOVECOT_MAILBOX_FORMAT=sdbox</span></span></code></pre></div><p>Como vamos a habilitar <code>TLS</code> mediante letsencrypt, tendremos que general el certificado. Nosotros hicimos temporalmente una copia de la configuración de <code>www.wupp.dev.conf</code> en Nginx para <code>mail.wupp.dev</code> y para así poder general el certificado con el comando:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> certbot --key-type ecdsa --elliptic-curve secp384r1 --nginx -d mail.wupp.dev</span></span></code></pre></div><p>Si aquí intentásemos ejecutar el contenedor, puede ser que salga un error diciendo que el puerto 25 ya está en uso. En nuestro caso, estaba en uso por <code>exim4</code>, que es un servicio para el correo que viene instalado en Debian. Nosotros lo que hicimos fue parar el servicio y desactivarlo con <code>sudo systemctl stop exim4.service</code> y <code>sudo systemctl disable exim4-base.timer</code>.</p><p>Hecho todo esto, podemos ejecutar <code>docker compose up -d</code> y, rápidamente habrá que crear una primera cuenta como puede ser <code>admin@wupp.dev</code>, así que ejecutamos el siguiente comando:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec -ti mailserver setup email add admin@wupp.dev</span></span></code></pre></div><p>Y con esto deberíamos tener el servidor de correo correctamente funcionando.</p><h2 id="retoques-finales" tabindex="-1">Retoques finales <a class="header-anchor" href="#retoques-finales" aria-label="Permalink to &quot;Retoques finales&quot;">​</a></h2><p>Como primera recomendación, crearemos un alias para postmaster:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec -ti mailserver setup alias add postmaster@wupp.dev admin@wupp.dev</span></span></code></pre></div><p>Queda configurar DMARC, DKIM y SPF. ¿Qué son? Puedes aprenderlo con <a href="https://www.cloudflare.com/learning/email-security/dmarc-dkim-spf/" target="_blank" rel="noreferrer">este artículo de Cloudflare</a>. Vamos un por uno.</p><h3 id="spf" tabindex="-1">SPF <a class="header-anchor" href="#spf" aria-label="Permalink to &quot;SPF&quot;">​</a></h3><p>Este es relativamente sencillo de configurar, simplemente debemos añadir un registro a nuestro dominio de tipo TXT con el siguiente contenido: <code>v=spf1 mx -all</code>. Esto indica que solo las direcciones IP que hemos incluído en los registros MX están autorizadas para mandar correos desde nuestro dominio y que el resto deben ser rechazadas.</p><h3 id="dkim" tabindex="-1">DKIM <a class="header-anchor" href="#dkim" aria-label="Permalink to &quot;DKIM&quot;">​</a></h3><p>Tenemos que asegurarnos que, entre los volúmenes montados en el <code>docker-compose.yml</code>, está <code>/var/dms/config/:/tmp/docker-mailserver/</code> para que las claves persistan. Desde el usuario <em>dockeruser</em> ejecutamos <code>docker compose exec -ti mailserver setup config dkim keytype ed25519 selector dkim-ed25519</code> para generar las claves principales y <code>docker compose exec -ti mailserver setup config dkim keysize 4096 selector dkim-rsa</code> para generar unas segundas claves porque no todos los servidores de correo aceptan aun el otro tipo de clave.</p><p>Vamos a mover y renombrar los archivos generados para mayor comodidad. Actualmente tenemos estos archivos en el contenedor en <code>/tmp/docker-mailserver/rspamd/dkim</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ed25519-dkim-ed25519-wupp.dev.private.txt</span></span>
<span class="line"><span>ed25519-dkim-ed25519-wupp.dev.public.dns.txt</span></span>
<span class="line"><span>ed25519-dkim-ed25519-wupp.dev.public.txt</span></span>
<span class="line"><span>rsa-4096-dkim-rsa-wupp.dev.private.txt</span></span>
<span class="line"><span>rsa-4096-dkim-rsa-wupp.dev.public.dns.txt</span></span>
<span class="line"><span>rsa-4096-dkim-rsa-wupp.dev.public.txt</span></span></code></pre></div><p>Vamos a cambiarlos a <code>/tmp/docker-mailserver/rspamd/dkim/wupp.dev</code> con el siguiente nombre cada uno:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dkim-ed25519.private</span></span>
<span class="line"><span>dkim-ed25519.public.dns</span></span>
<span class="line"><span>dkim-ed25519.public</span></span>
<span class="line"><span>dkim-rsa.private</span></span>
<span class="line"><span>dkim-rsa.public.dns</span></span>
<span class="line"><span>dkim-rsa.public</span></span></code></pre></div><p>Ahora toca crear el archivo de configuración (en el servidor, no en el contenedor). Primero creamos la carpeta con <code>sudo mkdir /var/dms/config/rspamd/override.d</code> y dentro el archivo <code>dkim_signing.conf</code> con:</p><div class="language-conf vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">conf</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># documentation: https://rspamd.com/doc/modules/dkim_signing.html</span></span>
<span class="line"><span></span></span>
<span class="line"><span>enabled = true;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sign_authenticated = true;</span></span>
<span class="line"><span>sign_local = true;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>use_domain = &quot;header&quot;;</span></span>
<span class="line"><span>use_redis = false; # don&#39;t change unless Redis also provides the DKIM keys</span></span>
<span class="line"><span>use_esld = true;</span></span>
<span class="line"><span>check_pubkey = true; # you want to use this in the beginning</span></span>
<span class="line"><span></span></span>
<span class="line"><span>selector = &quot;dkim-rsa&quot;;</span></span>
<span class="line"><span># The path location is searched for a DKIM key with these variables:</span></span>
<span class="line"><span># - \`$domain\` is sourced from the MIME mail message \`From\` header</span></span>
<span class="line"><span># - \`$selector\` is configured for \`mail\` (as a default fallback)</span></span>
<span class="line"><span>path = &quot;/tmp/docker-mailserver/rspamd/dkim/$domain/$selector.private&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># domain specific configurations can be provided below:</span></span>
<span class="line"><span>domain {</span></span>
<span class="line"><span>    wupp.dev {</span></span>
<span class="line"><span>        selectors [</span></span>
<span class="line"><span>            {</span></span>
<span class="line"><span>                path = &quot;/tmp/docker-mailserver/rspamd/dkim/wupp.dev/dkim-rsa.private&quot;;</span></span>
<span class="line"><span>                selector = &quot;dkim-rsa&quot;;</span></span>
<span class="line"><span>            },</span></span>
<span class="line"><span>            {</span></span>
<span class="line"><span>                path = &quot;/tmp/docker-mailserver/rspamd/dkim/wupp.dev/dkim-ed25519.private&quot;;</span></span>
<span class="line"><span>                selector = &quot;dkim-ed25519&quot;;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        ]</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>Y para que el archivo de configuración se copie al lugar correcto ejecutamos <code>docker compose down mailserver</code> y <code>docker compose up -d mailserver</code>. El archivo debería estar ahora (en el contenedor) en <code>/etc/rspamd/override.d/dkim_signing.conf</code>.</p><p>Por último, tenemos que añadir cada clave pública a un registro nuevo en el dominio. Igual que para la SPF, creamos un registro de tipo TXT con el contenido del archivo <code>/tmp/docker-mailserver/rspamd/dkim/wupp.dev/dkim-ed25519.public.dns</code> y <code>dkim-ed25519._domainkey</code> como subdominio y otro con el de <code>/tmp/docker-mailserver/rspamd/dkim/wupp.dev/dkim-rsa.public.dns</code> y <code>dkim-rsa._domainkey</code> como subdominio.</p><p>Podemos comprobar que funciona con <a href="https://mxtoolbox.com/dkim.aspx" target="_blank" rel="noreferrer">esta página</a>.</p><h3 id="dmarc" tabindex="-1">DMARC <a class="header-anchor" href="#dmarc" aria-label="Permalink to &quot;DMARC&quot;">​</a></h3><p>Este último es sencillo de configurar, utilizamos <a href="https://dmarcguide.globalcyberalliance.org/" target="_blank" rel="noreferrer">esta página</a> para generar la configuración que en nuestro caso es esta:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>_dmarc.wupp.dev. IN TXT &quot;v=DMARC1; p=quarantine; rua=mailto:admin@wupp.dev; ruf=mailto:admin@wupp.dev; sp=none; fo=1; ri=86400&quot;</span></span></code></pre></div><p>Y creamos un último registro TXT en el dominio con <code>_dmarc</code> como subdominio y el contenido entre comillas.</p><h3 id="informacion-adicional" tabindex="-1">Información adicional <a class="header-anchor" href="#informacion-adicional" aria-label="Permalink to &quot;Información adicional&quot;">​</a></h3><p>Es posible que, aun habiendo configurado SPF, DKIM y DMARC, algunos servidores de correos nos bloqueen el correo al intentar enviarlo a una de sus direcciones. A nosotros nos pasó con las direcciones de Outlook porque la IP del servidor estaba en la lista de Spamhaus y hubo que solicitar que se retirase desde <a href="https://check.spamhaus.org/" target="_blank" rel="noreferrer">este enlace</a>.</p><h2 id="cliente-web" tabindex="-1">Cliente web <a class="header-anchor" href="#cliente-web" aria-label="Permalink to &quot;Cliente web&quot;">​</a></h2><p>Por ahora no hemos visto ninguno interesante ni hemos tenido la necesidad.</p>`,44),o=[p];function l(r,t,c,d,h,k){return e(),a("div",null,o)}const g=s(i,[["render",l]]);export{u as __pageData,g as default};
