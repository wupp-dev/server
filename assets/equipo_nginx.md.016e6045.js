import{_ as s,o as a,c as n,U as e}from"./chunks/framework.4c4a06b8.js";const d=JSON.parse('{"title":"Nginx como servidor web","description":"","frontmatter":{"title":"Nginx como servidor web","lang":"es-ES"},"headers":[],"relativePath":"equipo/nginx.md","filePath":"equipo/nginx.md","lastUpdated":1689037713000}'),l={name:"equipo/nginx.md"},o=e(`<h1 id="nginx-como-servidor-web" tabindex="-1">Nginx como servidor web <a class="header-anchor" href="#nginx-como-servidor-web" aria-label="Permalink to &quot;Nginx como servidor web&quot;">​</a></h1><p>Ya nos hemos encargado de poder acceder al servidor remotamente, pero eso es solo para nosotros, queda la parte más importante, el poder ofrecer algún tipo de servicio <em>(como puede ser una página web)</em>.</p><p>Para ello, necesitamos un servidor web, que se encargará de gestionar las conexiones entrantes. Existen dos bastante famosos:</p><ul><li><a href="https://httpd.apache.org/" target="_blank" rel="noreferrer">Apache</a></li><li><a href="https://www.nginx.com/" target="_blank" rel="noreferrer">Nginx</a></li></ul><p>Nosotros usaremos Nginx por ser más moderno y más eficiente.</p><div class="warning custom-block"><p class="custom-block-title">ATENCIÓN</p><p>En esta guía se utilizan varios ajustes que mejoran la seguridad del servidor, pero esto reduce la compatibilidad con dispositivos antiguos y navegadores desactualizados, que no podrán acceder a la página. Nosotros hemos decidido que es más importante garantizar la seguridad a la retrocompatibilidad, pero esto dependerá de cada caso.</p></div><h2 id="instalacion-y-puesta-en-marcha" tabindex="-1">Instalación y puesta en marcha <a class="header-anchor" href="#instalacion-y-puesta-en-marcha" aria-label="Permalink to &quot;Instalación y puesta en marcha&quot;">​</a></h2><p>Para asegurarnos de tener la última versión siempre instalada, utilizaremos los repositorios de Nginx en vez de los del sistema operativo. Para añadirlos, podemos seguir los pasos de <a href="https://nginx.org/en/linux_packages.html#Debian" target="_blank" rel="noreferrer">su web</a>, que para Debian son:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gnupg2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ca-certificates</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lsb-release</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">debian-archive-keyring</span></span>
<span class="line"><span style="color:#FFCB6B;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://nginx.org/keys/nginx_signing.key</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gpg</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--dearmor</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tee</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/share/keyrings/nginx-archive-keyring.gpg</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">/dev/null</span></span>
<span class="line"><span style="color:#FFCB6B;">gpg</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--dry-run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--quiet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--import-options</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">import-show</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/share/keyrings/nginx-archive-keyring.gpg</span></span></code></pre></div><p>Con este último comando verificamos que la clave es la correcta, debería mostrarse lo siguiente:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pub</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">rsa2048</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2011</span><span style="color:#C3E88D;">-08-19</span><span style="color:#A6ACCD;"> [SC] </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">expires: </span><span style="color:#F78C6C;">2024</span><span style="color:#A6ACCD;">-06-14</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62</span></span>
<span class="line"><span style="color:#FFCB6B;">uid</span><span style="color:#A6ACCD;">                      </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">signing</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">key</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">signing-key@nginx.co</span><span style="color:#A6ACCD;">m</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>Nosotros hemos escogido usar los paquetes <strong>mainline</strong> en vez de los <strong>stable</strong>, la diferencia es que los primeros contienen las últimas novedades aunque pueden ser menos estables por tener características experimentales. Para añadir el repositorio mainline, utilizamos el siguiente comando:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">    http://nginx.org/packages/mainline/debian </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">lsb_release</span><span style="color:#C3E88D;"> -cs</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;"> nginx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tee</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/apt/sources.list.d/nginx.list</span></span></code></pre></div><p>Y ya ha llegado el momento de instalar Nginx:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre></div><p>Una vez instalado, podemos iniciarlo y verificar que está funcionando correctamente:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre></div><p>Sin embargo, queda un último paso, abrir los puertos <code>80</code> y <code>443</code> tanto en el router como en el firewall, para el firewall escribimos:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ufw</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">allow</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ufw</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">allow</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">443</span></span></code></pre></div><p>Estos son los puertos de HTTP y HTTPS respectivamente.</p><p>Vamos a toquetear un poco la configuración para las partes venideras de la guía. La configuración de Nginx se estructura en bloques. Concretamente la parte que tocaremos son los bloques <code>server</code>, que serán la configuración de cada uno de nuestros subdominios. Estos archivos de configuración se guardan en <code>/etc/nginx/conf.d/</code> y, por defecto, solo habrá un archivo llamado <code>default.conf</code>, vamos a cambiarle el nombre a <code>www.wupp.dev</code>, ya que tendrá el bloque encargado de gestionar las conexiones con esa URL.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mv</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/conf.d/default.conf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/conf.d/www.wupp.dev.conf</span></span></code></pre></div><p>Editamos el archivo buscando una línea que empiece por <code>server_name</code>:</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">server_name </span><span style="color:#A6ACCD;">wupp.dev www.wupp.dev</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>Ahora dejamos que Nginx verifique la sintaxis del archivo y, si no hay problemas, los reiniciamos:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># nginx: configuration file /etc/nginx/nginx.conf test is successful</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reload</span></span></code></pre></div><h2 id="habilitando-y-forzando-https" tabindex="-1">Habilitando <em>(y forzando)</em> HTTPS <a class="header-anchor" href="#habilitando-y-forzando-https" aria-label="Permalink to &quot;Habilitando _(y forzando)_ HTTPS&quot;">​</a></h2><p>Ahora mismo podemos poner en el navegador <a href="http://wupp.dev/" target="_blank" rel="noreferrer">wupp.dev</a>, pero la conexión no es segura 😦</p><p>Eso es inadmisible, así que vamos a forzar a que todas las conexiones HTTP se redirijan a HTTPS. Hemos seguido <a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-20-04-es" target="_blank" rel="noreferrer">este tutorial</a>.</p><p>Vamos a utilizar Certbot, un software para gestionar los certificados de Let&#39;s Encrypt, que son <a href="https://es.wikipedia.org/wiki/Autoridad_de_certificaci%C3%B3n" target="_blank" rel="noreferrer">certificados de autoridad</a> gratuitos.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">certbot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">python3-certbot-nginx</span></span></code></pre></div><p>Generamos el certificado para nuestro dominio:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">certbot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--key-type</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ecdsa</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--elliptic-curve</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">secp384r1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wupp.dev</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">www.wupp.dev</span></span></code></pre></div><p>Hemos especificado <code>--key-type ecdsa</code> porque</p><p>Y ya está, certbot se encarga de modificar la configuración del archivo <code>/etc/nginx/conf.d/www.wupp.dev.conf</code> para forzar el uso de HTTPS y para renovar automáticamente los certificados cuando vayan a expirar.</p><h2 id="otras-mejoras-de-seguridad" tabindex="-1">Otras mejoras de seguridad <a class="header-anchor" href="#otras-mejoras-de-seguridad" aria-label="Permalink to &quot;Otras mejoras de seguridad&quot;">​</a></h2><p>Aunque ya hemos asegurado que la conexión al servidor sea por HTTPS, aun quedan unos cuantos cambios por hacer para mejorar la seguridad.</p><p>Antes hemos mencionado que la configuración de Nginx se estructura en bloques, entre los que están los bloques de <code>server</code> donde iremos poniendo la configuración de nuestros subdominios. Todos estos bloques <code>server</code> están dentro de un bloque <code>http</code> en el archivo <code>/etc/nginx/nginx.conf</code>. Vamos a hacer unos cuantos cambios en ese archivo para mejorar la seguridad. Así debería verse:</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">user </span><span style="color:#A6ACCD;"> nginx</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">worker_processes </span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">error_log </span><span style="color:#A6ACCD;"> /var/log/nginx/error.log</span><span style="color:#89DDFF;"> notice;</span></span>
<span class="line"><span style="color:#89DDFF;">pid </span><span style="color:#A6ACCD;">       /var/run/nginx.pid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">events</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> worker_connections </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">http</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">Allow </span><span style="color:#C3E88D;">&quot;GET, POST, OPTIONS&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">X-Permitted-Cross-Domain-Policies </span><span style="color:#C3E88D;">&quot;none&quot;</span><span style="color:#A6ACCD;"> always</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">X-Content-Type-Options nosniff always</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">X-Frame-Options </span><span style="color:#C3E88D;">&quot;SAMEORIGIN&quot;</span><span style="color:#A6ACCD;"> always</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">X-XSS-Protection </span><span style="color:#C3E88D;">&quot;1; mode=block&quot;</span><span style="color:#A6ACCD;"> always</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">Referrer-Policy </span><span style="color:#C3E88D;">&quot;strict-origin-when-cross-origin&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">Content-Security-Policy </span><span style="color:#C3E88D;">&quot;default-src &#39;self&#39;;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">Content-Security-Policy-Report-Only </span><span style="color:#C3E88D;">&quot;default-src &#39;self&#39;;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">Permissions-Policy </span><span style="color:#C3E88D;">&quot;accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> add_header </span><span style="color:#A6ACCD;">Strict-Transport-Security </span><span style="color:#C3E88D;">&quot;max-age=63072000; includeSubDomains; preload&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> fastcgi_hide_header </span><span style="color:#A6ACCD;">X-Powered-By</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> fastcgi_hide_header </span><span style="color:#A6ACCD;">Server</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> fastcgi_hide_header </span><span style="color:#A6ACCD;">X-AspNet-Version</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> fastcgi_hide_header </span><span style="color:#A6ACCD;">X-AspNetMvc-Version</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> fastcgi_hide_header </span><span style="color:#A6ACCD;">X-Pingback</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># Set client_max_body_size and limit_rate</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> client_max_body_size </span><span style="color:#A6ACCD;">10m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> limit_rate </span><span style="color:#A6ACCD;">8m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">      /etc/nginx/mime.types</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> default_type </span><span style="color:#A6ACCD;"> application/octet-stream</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> log_format  main</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">&#39;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_addr</span><span style="color:#C3E88D;"> - </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">remote_user</span><span style="color:#C3E88D;"> [</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">time_local</span><span style="color:#C3E88D;">] &#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#C3E88D;">&#39;&quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request</span><span style="color:#C3E88D;">&quot; </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">status</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">body_bytes_sent</span><span style="color:#C3E88D;"> &#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">                      </span><span style="color:#C3E88D;">&#39;&quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_referer</span><span style="color:#C3E88D;">&quot; &quot;</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">http_user_agent</span><span style="color:#C3E88D;">&quot;&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> access_log </span><span style="color:#A6ACCD;"> /var/log/nginx/access.log </span><span style="color:#89DDFF;"> main;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># Disable server tokens in response headers</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_tokens </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># Enable SSL/TLS</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_protocols </span><span style="color:#A6ACCD;">TLSv1.3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_session_cache </span><span style="color:#A6ACCD;">shared:le_nginx_SSL:10m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_session_timeout </span><span style="color:#A6ACCD;">1d</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_session_tickets </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_ecdh_curve </span><span style="color:#A6ACCD;">secp384r1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># OSCP</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_stapling </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_stapling_verify </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> resolver </span><span style="color:#A6ACCD;">208.67.222.222 </span><span style="color:#F78C6C;">208.67.220.220</span><span style="color:#A6ACCD;"> valid=300s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> resolver_timeout </span><span style="color:#A6ACCD;">5s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_trusted_certificate </span><span style="color:#A6ACCD;">/etc/letsencrypt/live/wupp.dev/chain.pem</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> sendfile </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> tcp_nopush </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> tcp_nodelay </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> keepalive_timeout </span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">#gzip  on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">/etc/nginx/conf.d/*.conf</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">Para</span><span style="color:#A6ACCD;"> saber qué hace cada cambio, puedes buscarlo en la documentación de Nginx, porque por ahora me da pereza ponerlo aquí.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">::: </span><span style="color:#89DDFF;">danger</span><span style="color:#A6ACCD;"> PELIGRO</span></span>
<span class="line"><span style="color:#89DDFF;">Debes</span><span style="color:#A6ACCD;"> tener mucho cuidado al añadir \`preload\` a la cabecera de Strict-Transport-Security. Esto es algo que puede traerte problemitas si no conoces bien sus consecuencias. Para más información puedes consultar [esta página](https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html</span><span style="color:#676E95;font-style:italic;">#strict-transport-security-hsts).</span></span>
<span class="line"><span style="color:#A6ACCD;">:::</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">¿Cómo </span><span style="color:#89DDFF;">hemos</span><span style="color:#A6ACCD;"> decidido poner estas opciones? Pues buscando entre varias páginas recomendaciones. Aquí hay una lista de páginas que hemos consultado:</span></span>
<span class="line"><span style="color:#A6ACCD;">- [</span><span style="color:#89DDFF;">Generador</span><span style="color:#A6ACCD;"> de configuración SSL de Mozilla](https://ssl-config.mozilla.org/)</span></span>
<span class="line"><span style="color:#A6ACCD;">- [</span><span style="color:#89DDFF;">Recomendaciones</span><span style="color:#A6ACCD;"> de TLS de Mozilla](https://wiki.mozilla.org/Security/Server_Side_TLS)</span></span>
<span class="line"><span style="color:#A6ACCD;">- [Guía </span><span style="color:#89DDFF;">de</span><span style="color:#A6ACCD;"> HTTP de Mozilla](https://developer.mozilla.org/en-US/docs/Web/HTTP)</span></span>
<span class="line"><span style="color:#A6ACCD;">- [Descripción </span><span style="color:#89DDFF;">de</span><span style="color:#A6ACCD;"> cada cabecera HTTP](https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html)</span></span>
<span class="line"><span style="color:#A6ACCD;">- [</span><span style="color:#89DDFF;">Reportage</span><span style="color:#A6ACCD;"> de SSL Labs](https://www.ssllabs.com/ssltest/analyze.html?d=cloud.wupp.dev)</span></span>
<span class="line"><span style="color:#A6ACCD;">- [</span><span style="color:#89DDFF;">Reportage</span><span style="color:#A6ACCD;"> de TLS Profiler](https://tlsprofiler.danielfett.de/)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">Aun</span><span style="color:#A6ACCD;"> así, no hemos seguido las recomendaciones de cada página al pie de la letra, hemos escogido lo que más nos convenía.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Después </span><span style="color:#89DDFF;">de</span><span style="color:#A6ACCD;"> esto, dentro de cada bloque \`server\` podremos o tendremos que hacer otros cambios, pero eso es algo específico que iremos viendo.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">Un</span><span style="color:#A6ACCD;"> cambio que sí se puede hacer y que es útil si vamos a añadir varios subdominios (todos ellos con HTTPS), es crear un único bloque \`server\` que se encargue de redirigir todas las solicitudes HTTP a las respectivas HTTPS. Podemos crear un archivo \`/etc/nginx/conf.d/wupp.dev\` con el siguiente contenido:</span></span>
<span class="line"><span style="color:#A6ACCD;">\`\`\`</span><span style="color:#89DDFF;">nginx</span></span>
<span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">80</span><span style="color:#89DDFF;"> default_server;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">wupp.dev</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">301</span><span style="color:#A6ACCD;"> https://</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">server_name</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request_uri;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>Y así el archivo <code>/etc/nginx/www.wupp.dev</code> quedaría más limpio:</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">server</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> server_name </span><span style="color:#A6ACCD;">wupp.dev www.wupp.dev</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">#access_log  /var/log/nginx/host.access.log  main;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">/ </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">  /usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> index </span><span style="color:#A6ACCD;"> index.html index.htm</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">#error_page  404              /404.html;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># redirect server error pages to the static page /50x.html</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> error_page </span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">502</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">503</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">504</span><span style="color:#A6ACCD;">  /50x.html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">location</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/50x.html </span><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;"> root </span><span style="color:#A6ACCD;">  /usr/share/nginx/html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> listen </span><span style="color:#A6ACCD;">443 ssl</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_certificate </span><span style="color:#A6ACCD;">/etc/letsencrypt/live/wupp.dev/fullchain.pem</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_certificate_key </span><span style="color:#A6ACCD;">/etc/letsencrypt/live/wupp.dev/privkey.pem</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> include </span><span style="color:#A6ACCD;">/etc/letsencrypt/options-ssl-nginx.conf</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;"> ssl_dhparam </span><span style="color:#A6ACCD;">/etc/letsencrypt/ssl-dhparams.pem</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>Un detalle importante al usar Certbot es que añade automáticamente esta línea a cada bloque <code>server</code> para el que genera certificado:</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">include </span><span style="color:#A6ACCD;">/etc/letsencrypt/options-ssl-nginx.conf</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># managed by Certbot</span></span></code></pre></div><p>Si vemos el contenido de este archivo, nos daremos cuenta de un ligero problema:</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># This file contains important security parameters. If you modify this file</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># manually, Certbot will be unable to automatically provide future security</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># updates. Instead, Certbot will print and log an error message with a path to</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># the up-to-date file that you will need to refer to when manually updating</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># this file. Contents are based on https://ssl-config.mozilla.org</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">ssl_session_cache </span><span style="color:#A6ACCD;">shared:le_nginx_SSL:10m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">ssl_session_timeout </span><span style="color:#A6ACCD;">1440m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">ssl_session_tickets </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">ssl_protocols </span><span style="color:#A6ACCD;">TLSv1.2 TLSv1.3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">ssl_prefer_server_ciphers </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">ssl_ciphers </span><span style="color:#C3E88D;">&quot;ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>Este archivo nos está sobreescribiendo algunos ajustes que hemos hecho, pero advierte que si lo modificamos dejará de actualizarse junto con Certbot, así que tenemos dos opciones:</p><ul><li>Dejar simplemente que Certbot elija y actualice la configuración.</li><li>Cambiarla nosotros y asegurarnos de mantenerla en un futuro si surge alguna nueva recomendación de seguridad.</li></ul><p>Como nosotros no estamos satisfechos con la configuración actual de Certbot, hemos decidido cambiarla, quedando así:</p><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># This file contains important security parameters. If you modify this file</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># manually, Certbot will be unable to automatically provide future security</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># updates. Instead, Certbot will print and log an error message with a path to</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># the up-to-date file that you will need to refer to when manually updating</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># this file. Contents are based on https://ssl-config.mozilla.org</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">ssl_protocols </span><span style="color:#A6ACCD;">TLSv1.3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">ssl_session_cache </span><span style="color:#A6ACCD;">shared:le_nginx_SSL:10m</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">ssl_session_timeout </span><span style="color:#A6ACCD;">1d</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">ssl_session_tickets </span><span style="color:#A6ACCD;">off</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">ssl_ecdh_curve </span><span style="color:#A6ACCD;">secp384r1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">ssl_stapling </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">ssl_stapling_verify </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">resolver </span><span style="color:#A6ACCD;">208.67.222.222 </span><span style="color:#F78C6C;">208.67.220.220</span><span style="color:#A6ACCD;"> valid=300s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">resolver_timeout </span><span style="color:#A6ACCD;">5s</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">ssl_trusted_certificate </span><span style="color:#A6ACCD;">/etc/letsencrypt/live/wupp.dev/chain.pem</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Entre todas las cosas que hemos añadido está el OCSP Stapling, pero no está implementado en su totalidad, pues se puede añadir la etiqueta &quot;OCSP Must-Staple&quot; al certificado del servidor, pero no es algo esencial y habría que volver a generar todos los certificados de nuevo. Puedes ver más información <a href="https://scotthelme.co.uk/ocsp-must-staple/" target="_blank" rel="noreferrer">aquí</a>.</p></div><p>Aunque ya hemos acabado de configurar Nginx, hay que tener en cuenta de que por ahora lo único que hace es servir archivos estáticos localizados en <code>/usr/share/nginx/html/</code>.</p><p>En un principio, nos dedicaremos a añadir servicios en subdominios, dejando <code>www</code> intacto, así que puede dejarse como una página web estática, retocando un poco su apariencia o puede configurarse como uno de los servicios, eso ya queda a elección de cada uno.</p>`,52),p=[o];function t(c,r,i,y,C,D){return a(),n("div",null,p)}const u=s(l,[["render",t]]);export{d as __pageData,u as default};
