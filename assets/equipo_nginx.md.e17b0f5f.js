import{_ as s,c as a,o as n,N as o}from"./chunks/framework.fe1cbe83.js";const A=JSON.parse('{"title":"Nginx como servidor web","description":"","frontmatter":{"title":"Nginx como servidor web","lang":"es-ES"},"headers":[],"relativePath":"equipo/nginx.md","lastUpdated":1680696868000}'),e={name:"equipo/nginx.md"},l=o(`<h1 id="nginx-como-servidor-web" tabindex="-1">Nginx como servidor web <a class="header-anchor" href="#nginx-como-servidor-web" aria-label="Permalink to &quot;Nginx como servidor web&quot;">​</a></h1><p>Ya nos hemos encargado de poder acceder al servidor remotamente, pero eso es solo para nosotros, queda la parte más importante, el poder ofrecer algún tipo de servicio <em>(como puede ser una página web)</em>.</p><p>Para ello, necesitamos un servidor web, que se encargará de gestionar las conexiones entrantes.</p><h2 id="instalacion-y-puesta-en-marcha" tabindex="-1">Instalación y puesta en marcha <a class="header-anchor" href="#instalacion-y-puesta-en-marcha" aria-label="Permalink to &quot;Instalación y puesta en marcha&quot;">​</a></h2><p>Para asegurarnos de tener la última versión siempre instalada, utilizaremos los repositorios de Nginx en vez de los del sistema operativo. Para añadirlos, podemos seguir los pasos de <a href="https://nginx.org/en/linux_packages.html#Debian" target="_blank" rel="noreferrer">su web</a>, que para Debian son:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gnupg2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ca-certificates</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lsb-release</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">debian-archive-keyring</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">curl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://nginx.org/keys/nginx_signing.key</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">gpg</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--dearmor</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tee</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/share/keyrings/nginx-archive-keyring.gpg</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">/dev/null</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gpg</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--dry-run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--quiet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--import</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--import-options</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">import-show</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/share/keyrings/nginx-archive-keyring.gpg</span></span></code></pre></div><p>Con este último comando verificamos que la clave es la correcta, debería mostrarse lo siguiente:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pub</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">rsa2048</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2011</span><span style="color:#C3E88D;">-</span><span style="color:#F78C6C;">08</span><span style="color:#C3E88D;">-</span><span style="color:#F78C6C;">19</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">SC</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">expires: </span><span style="color:#F78C6C;">2024</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">06</span><span style="color:#A6ACCD;">-</span><span style="color:#F78C6C;">14</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62</span></span>
<span class="line"><span style="color:#FFCB6B;">uid</span><span style="color:#A6ACCD;">                      </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">signing</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">key</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">signing-key@nginx.co</span><span style="color:#A6ACCD;">m</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>Nosotros hemos escogido usar los paquetes <strong>mainline</strong> en vez de los <strong>stable</strong>, la diferencia es que los primeros contienen las últimas novedades aunque pueden ser menos estables por tener características experimentales. Para añadir el repositorio mainline, utilizamos el siguiente comando:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#C3E88D;">http://nginx.org/packages/mainline/debian </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">lsb_release</span><span style="color:#C3E88D;"> -cs</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;"> nginx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tee</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/apt/sources.list.d/nginx.list</span></span></code></pre></div><p>Y ya ha llegado el momento de instalar Nginx:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">update</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre></div><p>Una vez instalado, podemos iniciarlo y verificar que está funcionando correctamente:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre></div><p>Sin embargo, queda un último paso, permitir los puertos <code>80</code> y <code>443</code> tanto en el router como en el firewall, para el firewall escribimos:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ufw</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">allow</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ufw</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">allow</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">443</span></span></code></pre></div><p>Estos son los puertos de HTTP y HTTPS respectivamente.</p><p>Vamos a hacer retocar un poco la configuración para las partes venideras de la guía. La configuración de Nginx se estructura en bloques. Concretamente la parte que tocaremos son los bloques <code>server</code>, que serán la configuración de cada uno de nuestros subdominios. Estos archivos de configuración se guardan en <code>/etc/nginx/conf.d/</code> y, por defecto, solo habrá un archivo llamado <code>default.conf</code>, vamos a cambiarle el nombre a <code>wupp.dev</code>, ya que tendrá el bloque encargado de gestionar las conexiones con esa URL.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mv</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/conf.d/default.conf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/conf.d/wupp.dev.conf</span></span></code></pre></div><p>Editamos el archivo y buscamos una línea que empiece por <code>server_name</code>:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">server_name wupp.dev www.wupp.dev;</span></span></code></pre></div><p>Ahora verificamos que el archivo modificado verifique la sintaxis y reiniciamos el servicio de Nginx:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span></span>
<span class="line"><span style="color:#FFCB6B;">nginx:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">configuration</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">file</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/nginx.conf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">syntax</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ok</span></span>
<span class="line"><span style="color:#FFCB6B;">nginx:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">configuration</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">file</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/nginx/nginx.conf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">successful</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reload</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre></div><h2 id="habilitando-y-forzando-https" tabindex="-1">Habilitando <em>(y forzando)</em> HTTPS <a class="header-anchor" href="#habilitando-y-forzando-https" aria-label="Permalink to &quot;Habilitando *(y forzando)* HTTPS&quot;">​</a></h2><p>Ahora mismo podemos poner en el navegador <a href="http://wupp.dev/" target="_blank" rel="noreferrer">wupp.dev</a>, pero la conexión no es segura 😦</p><p>Eso es inadmisible, así que vamos a forzar a que todas las conexiones HTTP se redirijan a HTTPS. Hemos seguido <a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-20-04-es" target="_blank" rel="noreferrer">este tutorial</a>.</p><p>Vamos a utilizar Certbot, un software para gestionar los certificados de Let&#39;s Encrypt, que son <a href="https://es.wikipedia.org/wiki/Autoridad_de_certificaci%C3%B3n" target="_blank" rel="noreferrer">certificados de autoridad</a> gratuitos.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">certbot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">python3-certbot-nginx</span></span></code></pre></div><p>Generamos el certificado para nuestro dominio:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">certbot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wupp.dev</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">www.wupp.dev</span></span></code></pre></div><p>Y ya está, certbot se encarga de modificar la configuración del archivo <code>/etc/nginx/conf.d/wupp.dev.conf</code> para forzar el uso de HTTPS y para renovar automáticamente los certificados cuando vayan a expirar.</p><h2 id="otras-mejoras-de-seguridad" tabindex="-1">Otras mejoras de seguridad <a class="header-anchor" href="#otras-mejoras-de-seguridad" aria-label="Permalink to &quot;Otras mejoras de seguridad&quot;">​</a></h2><p>--- POR HACER ---</p>`,33),p=[l];function t(r,c,i,C,y,d){return n(),a("div",null,p)}const u=s(e,[["render",t]]);export{A as __pageData,u as default};
