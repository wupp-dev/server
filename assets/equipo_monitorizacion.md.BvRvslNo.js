import{_ as a,c as i,a0 as e,o as n}from"./chunks/framework.BXIsVzPz.js";const c=JSON.parse('{"title":"Monitorizando el equipo y los servicios","description":"","frontmatter":{},"headers":[],"relativePath":"equipo/monitorizacion.md","filePath":"equipo/monitorizacion.md","lastUpdated":1736885052000}'),t={name:"equipo/monitorizacion.md"};function l(o,s,r,p,h,k){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="monitorizando-el-equipo-y-los-servicios" tabindex="-1">Monitorizando el equipo y los servicios <a class="header-anchor" href="#monitorizando-el-equipo-y-los-servicios" aria-label="Permalink to &quot;Monitorizando el equipo y los servicios&quot;">‚Äã</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Aunque es recomendable configurar la monitorizaci√≥n, es <strong>completamente opcional</strong> y el servidor funciona perfectamente sin ello.</p></div><p>Tener una m√≠nima idea de qu√© pasa en tu servidor es probablemente una buena idea. ¬øLa tenemos? Realmente no y nunca nos hab√≠amos preocupado, hasta que un buen d√≠a este revent√≥ por subir unas fotos a Immich. Desde ese momento, se me ocurri√≥ que igual era buena idea tener un m√≠nimo de conocimiento de qu√© pasa.</p><p>Grafana y Prometheus son dos herramientas bastante conocidas en este aspecto, as√≠ que empec√© por ah√≠, buscando en un blog sobre self-hosting que conoc√≠a. Encontr√© y part√≠ de <a href="https://noted.lol/netdata-prometheus-and-grafana/" target="_blank" rel="noreferrer">este art√≠culo</a>, el cual tambi√©n incluye NetData. Adicionalmente, a parte de recolectar todas las m√©tricas del sistema, vamos a configurar Loki con Grafana para almacenar y agregar todos los logs</p><p>Tras un intento fallido (y por tanto ignorado) de conseguir configurarlo adecuadamente en el local, comenzamos con la instalaci√≥n.</p><h2 id="instalando-netdata-en-el-sistema" tabindex="-1">Instalando NetData en el sistema <a class="header-anchor" href="#instalando-netdata-en-el-sistema" aria-label="Permalink to &quot;Instalando NetData en el sistema&quot;">‚Äã</a></h2><p>Vamos a hacer una excepci√≥n con la instalaci√≥n de este servicio. Dado que NetData es una herramienta para monitorizar el sistema y con ello Docker, nos viene bien tenerla aislada del propio Docker, permiti√©ndonos as√≠ ver errores y problemas en Docker cuando estos surjan sin el riesgo de que este servicio tambi√©n caiga.</p><details class="details custom-block"><summary>¬øPuedo instalarlo con Docker?</summary><p>Se puede instalar perfectamente con Docker, toda la informaci√≥n para la instalaci√≥n est√° en <a href="https://learn.netdata.cloud/docs/netdata-agent/installation/docker" target="_blank" rel="noreferrer">su documentaci√≥n</a>.</p></details><p>Para instalarlo en el sistema, vamos a usar el script que proveen:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/netdata-kickstart.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://my-netdata.io/kickstart.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/netdata-kickstart.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --stable-channel</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --disable-telemetry</span></span></code></pre></div><p>Con el par de flags que le pasamos, nos aseguramos de que nos instala la versi√≥n estable y que se deshabilita la telemetr√≠a. El script te pedir√° permisos de administrador, te toca d√°rselos te guste o no para que instale algunas cosas con apt. Una vez instalado, vamos a usar port forwarding para poder acceder a la dashboard de Netdata y configurar un par de cosas m√°s. Para ello, utilizamos ssh de la siguiente manera:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 19999:127.0.0.1:19999</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -N</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">puero_ss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@server.com</span></span></code></pre></div><p>En la dashboard te va a aparecer en grande un texto de bienvenida y un bot√≥n para iniciar sesi√≥n, pasa. Si te fijas debajo de √©l, debajo de todo, en peque√±ito y sin casi contraste con el fondo, con la clara intenci√≥n de que no lo veas, le puedes dar a continuar sin iniciar sesi√≥n. Continuamos por tanto as√≠ de manera an√≥nima.</p><p>Puedes curiosear ahora todo lo que quieras. Hay mucha, mucha, mucha informaci√≥n, incluida mucho in√∫til (para nosotros al menos) como el n√∫mero de inodes disponibles. Pero ahora vamos a ir poquito a poco d√°ndole sentido y una mejor apariencia a todo üòÑ.</p><h2 id="lanzando-prometheus-a-agregar-datos" tabindex="-1">Lanzando Prometheus: a agregar datos <a class="header-anchor" href="#lanzando-prometheus-a-agregar-datos" aria-label="Permalink to &quot;Lanzando Prometheus: a agregar datos&quot;">‚Äã</a></h2><p>Sinceramente ahora mismo no vamos a dar un paso adelante en que todo coja sentido, casi que m√°s hacia atr√°s, pero no pasa nada, a veces hay que ir para atr√°s para ir hacia delante. Vamos a pasar a instalar Prometheus, un recolector y agregador de m√©tricas.</p><p>Este software nos va a permitir tener todas las m√©tricas de todos los servicios (m√°s adelante lo entender√©is mejor) juntas en un √∫nico sitio y bien almacenadas, por el tiempo que estimemos y deseemos. Tambi√©n se puede usar para ver los datos y hacer queries, pero no nos vamos a centrar en eso, no es lo que nos interesa de esto.</p><p>Primero, vamos a crear un archivo de configuraci√≥n b√°sico con el que empezar. C√≥mo se trata de empezar con algo, vamos a usar el archivo del art√≠culo que mencionaba al comienzo de la p√°gina. Por tanto, copiamos el siguiente texto y lo guardamos en <code>prometheus/prometheus.yml</code>:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># my global config</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  scrape_interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">15s</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  evaluation_interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">15s</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Evaluate rules every 15 seconds. The default is every 1 minute.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # scrape_timeout is set to the global default (10s).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Alertmanager configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">alerting</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  alertmanagers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">static_configs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">targets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # - alertmanager:9093</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load rules once and periodically evaluate them according to the global &#39;evaluation_interval&#39;.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">rule_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # - &quot;first_rules.yml&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # - &quot;second_rules.yml&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># A scrape configuration containing exactly one endpoint to scrape:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Here it&#39;s Prometheus itself.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scrape_configs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # The job name is added as a label \`job=&lt;job_name&gt;\` to any timeseries scraped from this config.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">job_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prometheus&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # metrics_path defaults to &#39;/metrics&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # scheme defaults to &#39;http&#39;.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    static_configs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">targets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost:9090&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  #################################################################################################</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">job_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;server-monitor&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    metrics_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/api/v1/allmetrics&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # format: prometheus | prometheus_all_hosts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # You can use \`prometheus_all_hosts\` if you want Prometheus to set the \`instance\` to your hostname instead of IP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">prometheus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      #</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # source: as-collected | raw | average | sum | volume</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # default is: average</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      #source: [as-collected]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      #</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # server name for this prometheus - the default is the client IP</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # for Netdata to uniquely identify it</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      #server: [&#39;prometheus1&#39;]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    honor_labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    static_configs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">targets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost:19999&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#################################################################################################</span></span></code></pre></div><p>Una vez que tenemos el archivo b√°sico (m√°s adelante profundizaremos en la configuraci√≥n) podemos pasar a lanzar la imagen de docker. Para esto, a√±adimos a los servicios del <code>docker-compose.yml</code> lo siguiente:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">prometheus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">prom/prometheus</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # ports:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # - &#39;9090:9090&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  network_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host&quot;</span></span></code></pre></div><p>En este caso, los puertos expuestos est√°n comentados y hay una clave nueva, <code>network_mode</code>. Esto se debe a que para que Prometheus pueda acceder a <strong>todas</strong> las m√©tricas de <strong>todos</strong> nuestros servicios y sistemas (incluyendo el NetData que hemos configurado antes) tiene que poder acceder a los puertos que estos vinculan al host, lo que se hace adjudicando el contenedor directamente a la red del host, en vez de a la que crea Docker. ¬øEs lo m√°s seguro? Nop. ¬øEs perfecto? Nop. ¬øEs una soluci√≥n real? Nop. ¬øEs un apa√±o que nos sirve perfectamente? Sip. (<em>Alg√∫n d√≠a descubrir√© c√≥mo hacerlo mejor</em>).)</p><p>Para comprobar que en efecto Prometheus est√° recogiendo bien las m√©tricas de NetData, puedes hacer 2 cosas diferentes:</p><ul><li><p>D√≥nde est√° el campo de entrada para meter una expresi√≥n, haz click sobre los tres puntos y dale a &quot;Explore metrics&quot;. Te va a aparecer una lista excesivamente larga de m√©tricas disponibles, pero puedes buscar en el campo de b√∫squeda <code>netdata</code> y deber√≠an de aparecerte.</p></li><li><p>Ve a <em>Status &gt; Target health</em> y deber√°n de aparecerte 2 targets, el propio Prometheus y el que hemos configurado como <code>server-monitor</code>. Si en el segundo pone que el estado es <code>UP</code>, todo perfe.</p></li></ul><p>Vamos ahora ya a lo chulo (aunque a√∫n no se vea chulo).</p><h2 id="graficos-bonitos-con-grafana" tabindex="-1">Gr√°ficos bonitos con Grafana <a class="header-anchor" href="#graficos-bonitos-con-grafana" aria-label="Permalink to &quot;Gr√°ficos bonitos con Grafana&quot;">‚Äã</a></h2><p>Para poder sacar algo √∫til de esto y adaptarlo a nuestro gusto y necesidades, necesitamos algo que nos permita crear esa interfaz que buscamos. Entra el √∫ltimo componente del montaje: <a href="https://grafana.com" target="_blank" rel="noreferrer">Grafana</a>.</p><p>Grafana nos permite crear b√°sicamente cualquier tipo de panel/dashboard para visualizar datos, incluyendo todos los recogidos con Prometheus pero tambi√©n cosas desde un <a href="https://grafana.com/grafana/plugins/grafana-clock-panel/" target="_blank" rel="noreferrer">simple reloj</a> a conectar con <a href="https://grafana.com/grafana/plugins/grafana-googlesheets-datasource/" target="_blank" rel="noreferrer">Google Sheets</a>. Como con Prometheus, utilizaremos Docker y de nuevo, para que pueda sacar los datos de Prometheus, usaremos la red del host. As√≠, a√±adimos lo siguiente a los servicios de nuestro <code>docker-compose.yml</code>:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">grafana</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">grafana/grafana</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;uid&gt;:&lt;gid&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  network_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./grafana/data:/var/lib/grafana&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  env_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.env.d/grafana.env&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unless-stopped</span></span></code></pre></div><ul><li><p>Como antes, utilizamos la red de host y no vinculamos puertos por ello.</p></li><li><p>Montamos un √∫nico volumen (al menos por ahora), que nos enlaza con la base de datos y nos permite persistir los datos de Grafana. En la documentaci√≥n oficial, recomiendan usar vol√∫menes de docker en lugar de vincular al sistema de archivos, pero en nuestro caso en todo momento hemos vinculado al sistema de archivos, por lo que as√≠ continuar√° siendo.</p></li><li><p>En el archivo de entorno que vinculamos, vamos a configurar nuestra instancia. La imagen de Docker de Grafana no permite a√±adir otros archivos de configuraci√≥n para extender el por defecto, por tanto nos tenemos que apa√±ar con las variables de entorno (<a href="https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/#default-paths" target="_blank" rel="noreferrer">aqu√≠ est√° en su documentaci√≥n</a>, que mira que me cost√≥ encontrarlo).</p></li></ul><p>Como comentamos en el √∫ltimo punto, vamos a configurar un par de cosas antes de lanzar el contenedor, as√≠ que tomad el siguiente archivo y completad:</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Para darnos m√°s seguridad, vamos a vincularlo a un puerto aleatorio</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_SERVER_HTTP_PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;puerto_aleatorio&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Aunque est√° deshabilitado por defecto, es recomendable habilitarlo y no deber√≠a dar problemas (deshabil√≠talo si te da problemas))</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_SERVER_ENABLE_GZIP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Si se desea, esto se puede desactivar si se ha configurado Watchtower (descomentar la l√≠nea)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># GF_ANALYTICS_CHECK_FOR_UPDATES=false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Por comodidad, configuramos la cuenta de admin aqu√≠</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Lo primero es desactivar el registro inicial de ella</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_SECURITY_DISABLED_INITIAL_ADMIN_CREATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ahora configuramos la cuenta</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_ADMIN_USER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;usuario&gt;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_ADMIN_PASSWORD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;contrase√±a&gt;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_ADMIN_EMAIL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">admin@server.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Configuraci√≥n del email</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_SMTP_ENABLED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_SMTP_HOST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">server.com</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Recuerda crear los correos que vayas a usar</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_SMTP_USER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;grafana@server.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_SMTP_PASSWORD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;contrase√±a&gt;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_SMTP_FROM_ADDRESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;grafana@server.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_SMTP_FROM_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Grafana Server&quot; # El por defecto es &quot;Grafana&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Manda un mensaje de bienvenida a los nuevos usuarios</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">GF_EMAILS_WELCOME_EMAIL_ON_SIGN_UP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TODO Usar una DB que no sea SQLite</span></span></code></pre></div><p>¬°Ya podemos por fin subir el contenedor y comprobar que funciona!</p><p>Te tiene que aparecer el inicio de sesi√≥n lo primero, as√≠ que inicia sesi√≥n como admin con las credenciales que hemos configurado antes. Si no te funcionan por lo que sea, prueba a usar lo por defecto, que es usuario <code>admin</code> y contrase√±a <code>admin</code>. Para poder ver algo, vamos a hacer dos cosas:</p><ol><li><p>Tenemos que configurar Prometheus como una fuente de datos para Grafana. Cuando accedas a Grafana, te aparecer√° una tarjetita con un enlace diciendo que configures una fuente de datos. Haz click ah√≠ y selecciona Prometheus como la fuente de datos. Introduce la direcci√≥n a ella, que en nuestro caso ser√° <code>localhost:&lt;puerto_prometheus&gt;</code> (el porto por defecto es 9090). Una vez configurado esto, Grafana ya puede recolectar y acceder a los datos de Prometheus.</p></li><li><p>Para ver algo, vamos a configurar una dashboard para hacer pruebas. Para ello podemos descargar un archivo JSON que funciona como definici√≥n de una dashboard, yo por ejemplo he probado con <a href="https://grafana.com/grafana/dashboards/7107-netdata/" target="_blank" rel="noreferrer">este</a>. Ahora, desde d√≥nde hemos a√±adido Prometheus, te tiene que aparecer abajo para crear una dashboard (si te has salido de ah√≠ ya, puedes ir al inicio y te aparece otra tarjeta como la de conectar una fuente de datos para crear una dashboard, haz click ah√≠). Dale a la opci√≥n de importar archivo JSON y sube el archivo de la que acabas de descargar. Ta-da! Ya tenemos nuestra primera dashboard. Puede que algunas m√©tricas no se muestren bien, es normal, a√∫n podemos configurar mejor NetData para que recolecte cosas que igual no est√° recolectando, pero por ahora nos sirve para ver que funciona.</p></li></ol><p>Pues ya est√°, ya est√°s recolectando m√©tricas de tu sistema y ya puedes visualizarlas. Seg√∫n vaya probando a configurar mejor Grafana, Prometheus y NetData, ir√© actualizando este art√≠culo para reflejarlo. Por ahora, te animo a investigar por tu cuenta y probar a configurar mejor estas cosas.</p><h2 id="logs-con-loki" tabindex="-1">Logs con Loki <a class="header-anchor" href="#logs-con-loki" aria-label="Permalink to &quot;Logs con Loki&quot;">‚Äã</a></h2><p>Una parte muy importante para saber qu√© demonios pasa en las cosas es los logs. Ahora mismo cada log est√° en un lado diferente, o en sus contenedores correspondiente, o en un archivo en el FS o perdidos por alg√∫n lado (odio Nextcloud); lo cual admitamos no es nada c√≥modo ni pr√°ctico. Ahora que tenemos Grafana, podemos ver en ella logs si as√≠ lo configuramos, as√≠ que vamos a configurar un agregador y recolector de logs desarrollado por el propio equipo de Grafana: <a href="https://grafana.com/docs/loki/latest/" target="_blank" rel="noreferrer">Loki</a>.</p><h3 id="instalacion-de-loki" tabindex="-1">Instalaci√≥n de Loki <a class="header-anchor" href="#instalacion-de-loki" aria-label="Permalink to &quot;Instalaci√≥n de Loki&quot;">‚Äã</a></h3><p>Loki es el servicio que nos va a almacenar y nos va a permitir filtrar y buscar todos los logs, pero adem√°s de este, vamos a configurar otro que nos va a permitir recolectar los logs de varios sitios: Promtrail.</p><p>Vamos a seguir lo <a href="https://grafana.com/docs/loki/latest/setup/install/docker/" target="_blank" rel="noreferrer">gu√≠a de instalaci√≥n con docker oficial</a>. Para ello, primero, vamos a crear un directorio para loki y uno para promtail (dentro del de loki) y vamos a usar los archivos de configuraci√≥n por defecto que podemos encontrar en el art√≠culo enlazado arriba:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/grafana/loki/v3.0.0/cmd/loki/loki-local-config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loki-config.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> promtail</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> promtail</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/grafana/loki/v3.0.0/clients/cmd/promtail/promtail-docker-config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> promtail-config.yaml</span></span></code></pre></div><p>Antes de crear el contenedor, como de nuevo vamos a conectarlo directamente al host, vamos a cambiar los puerto a los que se vincula para mejorar la seguridad. Para ello genera dos aleatorios, por ejemplo consideremos 17823 y 34532 y cambia la siguiente configuraci√≥n en el <code>loki-config.yaml</code>:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  http_listen_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17823</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  grpc_listen_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">34532</span></span></code></pre></div><p>Tenemos que tambi√©n actualizar la configuraci√≥n de Promtail para que vincule correctamente a Loki, ya que hemos cambiado su puerto, as√≠ que cambiemos lo siguiente en <code>promtail-config.yaml</code>:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">clients</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://localhost:17823/loki/api/v1/push</span></span></code></pre></div><p>Nos falta una √∫ltima cosa para asegurarnos de que todo va bien: permisos. Linux es s√∫per granular con los permisos, lo cual est√° guay, pero tambi√©n nos va a dar un poco de dolor de cabeza conseguir que Promtail pueda acceder a nuestros logs. Para ello, vamos a tener que darle permiso a nuestros logs, y los m√°s f√°cil nos va a resultar crear un grupo para ello.</p><p>Vamos entonces a crear un grupo, por ejemplo <code>monitoreo</code>. Una vez tengamos este grupo creado, vamos a tener que ir cambiando el grupo propietario de los archivos que con Promtail queramos leer a este grupo. Para empezar con lo b√°sico, los logs del sistema, har√≠amos tal que as√≠ (esto vas a tener que hacerlo en un user con el que puedas hacer sudo):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> groupadd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monitoreo</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 # Creamos el grupo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monitoreo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # A√±adimos a root</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monitoreo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usuario</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # A√±adimos a nuestro usuario por defecto</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monitoreo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dockeruser</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # A√±adimos a nuestro usuario de docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monitoreo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> netdata</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # A√±adimos al usuario de NetData para no romper nada, ya que tiene acceso al grupo que por defecto se pone</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chgrp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monitoreo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.log</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # Cambiamos el grupo de los logs a monitorizar</span></span></code></pre></div><p>Una vez hecho esto, tenemos que anotarnos el id del grupo que acabamos de crear. Para eso, ejecuta <code>id</code> y busca algo como <code>&lt;numero&gt;(monitoreo)</code> y an√≥tate ese n√∫mero, ese n√∫mero es el id del grupo de monitoreo y lo usaremos al configurar docker.</p><p>En el art√≠culo oficial, ejecuta los contenedores manualmente desde la terminal, as√≠ que vamos a traducirlo a formato de Compose (aprovechando tambi√©n la documentaci√≥n <a href="https://hub.docker.com/r/grafana/loki" target="_blank" rel="noreferrer">que tienen en Docker Hub</a>) y a√±adirlo a nuestros servicios en √©l:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">loki</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">grafana/loki:3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1001:1001&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Necesario para que pueda acceder a los archivos de config creados</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./loki/loki-config.yaml:/etc/loki/local-config.yaml&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./loki/loki-data:/loki&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  network_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Como antes, tenemos que darle acceso al host para poder contactar con promtail correctamente</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">promtail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">grafana/promtail:3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1001:&lt;id_grupo_monitoreo&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/var/log:/var/log&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./loki/promtail:/mnt/config&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-config.file=/mnt/config/promtail-config.yaml&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  network_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;host&quot;</span></span></code></pre></div><h3 id="anadiendolo-a-grafana" tabindex="-1">A√±adi√©ndolo a Grafana <a class="header-anchor" href="#anadiendolo-a-grafana" aria-label="Permalink to &quot;A√±adi√©ndolo a Grafana&quot;">‚Äã</a></h3><p>Configurar ahora la fuente de datos en Grafana vuelve a ser muy f√°cil. Tenemos que ir a <em>Connections &gt; Data Sources</em> y a√±adir una nueva. El tipo de conexi√≥n que queremos a√±adir el &quot;Loki&quot;. Introduce la URL que hayas configurado antes para Loki (el puerto que hayas puesto), ¬°y ya podemos ver los logs de Loki!</p><p>Para ello, ve a <em>Explore &gt; Logs</em> y te aparecer√°n todos los logs que Loki est√° recolectando.</p><h3 id="recolectando-metricas-de-loki" tabindex="-1">Recolectando m√©tricas de Loki <a class="header-anchor" href="#recolectando-metricas-de-loki" aria-label="Permalink to &quot;Recolectando m√©tricas de Loki&quot;">‚Äã</a></h3><p>Tanto Loki como Promtail exportan m√©tricas que Prometheus puede recolectar. Como otro ejemplo de configurar m√°s recolecci√≥n de m√©tricas en Prometheus, vamos a configurar estos dos.</p><p>Para ello, a√±adimos al final de nuestro archivo de configuraci√≥n de Prometheus (<code>prometheus.yml</code>) las siguientes l√≠neas:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">job_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">loki</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  static_configs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">targets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost:&lt;loki_port&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">job_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">promtail</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  static_configs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">targets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost:&lt;promtail_port&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>Y reiniciamos el contenedor de Prometheus para que pille la nueva configuraci√≥n con <code>docker compose restart prometheus</code></p><h3 id="configurando-cada-servicio" tabindex="-1">Configurando cada servicio <a class="header-anchor" href="#configurando-cada-servicio" aria-label="Permalink to &quot;Configurando cada servicio&quot;">‚Äã</a></h3><p>La mayor√≠a de servicios te permiten recolectar m√©tricas sobre ellos o puedes recolectar sus logs en Loki, pero ponernos a explicar c√≥mo hacerlo para cada uno aqu√≠ no tiene mucho sentido.</p><p>En su lugar, en cada una de las p√°ginas de servicios vas a tener al final una parte de <em>Extra &gt; Monitorizaci√≥n</em> y una de <em>Extra &gt; Recolecci√≥n de logs</em> en la que se va a explicar c√≥mo configurar cada uno para ello.</p><h2 id="usando-cadvisor" tabindex="-1">Usando cAdvisor <a class="header-anchor" href="#usando-cadvisor" aria-label="Permalink to &quot;Usando cAdvisor&quot;">‚Äã</a></h2><p>TODO <a href="https://github.com/google/cadvisor" target="_blank" rel="noreferrer">https://github.com/google/cadvisor</a></p>`,65)]))}const u=a(t,[["render",l]]);export{c as __pageData,u as default};
