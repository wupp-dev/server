import{_ as e,c as a,o as r,a as s}from"./app.c3ea2832.js";const o="/server/assets/amp-instalacion.1b34b26c.png",n="/server/assets/amp-inicio.9efe0c14.png",i="/server/assets/amp-creacion-proxy.cd00683c.png",t="/server/assets/amp-creacion-lobby.5245ddae.png",y=JSON.parse('{"title":"Minecraft con AMP","description":"","frontmatter":{"title":"Minecraft con AMP","lang":"es-ES"},"headers":[{"level":2,"title":"Instalaci\xF3n de AMP","slug":"instalacion-de-amp","link":"#instalacion-de-amp","children":[]},{"level":2,"title":"Configurando el proxy","slug":"configurando-el-proxy","link":"#configurando-el-proxy","children":[]},{"level":2,"title":"El primer servidor","slug":"el-primer-servidor","link":"#el-primer-servidor","children":[]}],"relativePath":"servicios/minecraft.md","lastUpdated":1664021424000}'),l={name:"servicios/minecraft.md"},c=s('<h1 id="minecraft-con-amp" tabindex="-1">Minecraft con AMP <a class="header-anchor" href="#minecraft-con-amp" aria-hidden="true">#</a></h1><p>Para gestionar un servidor de minecraft con varios tipos de mundos incluyendo minijuegos, las cosas se vuelven m\xE1s complicadas que simplemente tener un servidor ejecut\xE1ndose con los plugins, as\xED que usamos un software <em>(por desgracia de c\xF3digo cerrado)</em> que nos ayudar\xE1 a gestionar todos los servidores.</p><p><img src="'+o+`" alt="AMP Instalaci\xF3n"></p><p>Este software se llama <a href="https://cubecoders.com/AMP" target="_blank" rel="noreferrer">AMP <em>(Application Management Panel)</em></a> y est\xE1 desarrrollado por CubeCoders. Lo bueno que tiene es que no solo sirve para gestionar servidores de Minecraft Java Edition, sirve para Bedrock y para bastantes m\xE1s juegos. Adem\xE1s, la licencia <em>Professional</em>, que es la m\xE1s barata, cuesta unos 10\u20AC y es un pago \xFAnico, as\xED que est\xE1 guay.</p><p>Dentro de AMP, crearemos los distintos servidores de minecraft, de los que hay que diferenciar dos partes:</p><ul><li>Est\xE1n los servidores con los distintos mundos o minijuegos. Aqu\xED est\xE1 lo jugable.</li><li>Y luego est\xE1 el proxy, que se encarga de conectar todos esos servidores para que los jugadores puedan moverse c\xF3modamente de uno a otro. El proxy es el que se encarga de gestionar la conexi\xF3n con los jugadores en todo momento.</li></ul><p>As\xED que lo primero ser\xE1 instalar AMP y despu\xE9s ya podremos crear y configurar los servidores.</p><h2 id="instalacion-de-amp" tabindex="-1">Instalaci\xF3n de AMP <a class="header-anchor" href="#instalacion-de-amp" aria-hidden="true">#</a></h2><p>Lo primero es cambiarnos al usuario <code>root</code> y despu\xE9s ejecutar el script de instalaci\xF3n:</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo su -l</span></span>
<span class="line"><span style="color:#A6ACCD;">$ bash &lt;(wget -qO- getamp.sh)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Lo primero que har\xE1 es preguntarnos una contrase\xF1a para el usuario <code>amp</code> del sistema, que ser\xE1 el que contenga todos los archivos de minecraft. Si no introducimos ninguna generar\xE1 una aleatoria. Como no va a ser necesario acceder a ese usuario manualmente, lo dejamos en blanco.</p><p>Ahora hay que elegir un nombre de usuario y una contrase\xF1a <em>(solo con n\xFAmeros y letras)</em> que ser\xE1 para acceder al panel de control y gestionar los servidores. La contrase\xF1a debe ser tremenda.</p><p>Nos hace una serie de preguntas, cuya respuesta es:</p><ul><li>S\xED vamos a tener servidores de Minecraft.</li><li>Aqu\xED depende de si hay inter\xE9s por crear servidores de otros juegos. Nunca est\xE1 de m\xE1s tener las librer\xEDas.</li><li>S\xED queremos utilizar docker para los servidores.</li><li>Y, si ya hemos <a href="./../equipo/nginx.html">configurado Nginx</a>, s\xED queremos habilitar HTTPS.</li></ul><p>Pulsamos &lt;Enter&gt; y so pondr\xE1 a instalar AMP. Una vez instalado, tendremos que acceder desde la web para seguir la configuraci\xF3n <em>(el enlace lo mostrar\xE1 en la consola)</em>.</p><p>Desde el navegador, utilizaremos el modo de operaci\xF3n por defecto <em>(Standalone)</em>, pondremos la licencia y nos tocar\xE1 reiniciar AMP con el bot\xF3n.</p><p><strong>\xA1OJO!</strong> Si hemos seguido la <a href="./../equipo/docker.html">configuraci\xF3n de Docker</a>, nos dar\xE1 un error al intentar crear un servidor de minecraft, ya que antes tendremos que a\xF1adir al usuario <code>amp</code> al grupo <code>docker</code> con el comando ejecutado como <code>root</code>:</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">usermod -a -G docker amp</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Y seguramente tengamos que hacer un reiniciao para que los cambios tengan efecto, despu\xE9s de eso ya no deber\xEDa de haber problema para crear servidores.</p><p><img src="`+n+`" alt="AMP Inicio"></p><p>Una vez estamos aqu\xED, vamos a hacer un primer cambio en la configuraci\xF3n, nos vamos a <em>New Instances Defaults</em> y marcamos la opci\xF3n <em>Exclude new instances from firewall</em>. Esto har\xE1 que los servidores nuevos no se a\xF1adan autom\xE1ticamente al firewall para permitir sus puertos, ya que no necesitaremos que esos puertos est\xE9n abiertos al exterior porque la gente se conectar\xE1 \xFAnicamente al proxy, que s\xED tendremos que permitir, as\xED que escribimos en la terminal:</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo ufw allow 25565</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="configurando-el-proxy" tabindex="-1">Configurando el proxy <a class="header-anchor" href="#configurando-el-proxy" aria-hidden="true">#</a></h2><p>Ahora vamos a crear el proxy. Utilizaremos <a href="https://papermc.io/downloads#Waterfall" target="_blank" rel="noreferrer">Waterfall</a>, un fork de <a href="https://www.spigotmc.org/wiki/bungeecord/" target="_blank" rel="noreferrer">Bungeecord</a> que tiene mejor soporte para <a href="https://files.minecraftforge.net/net/minecraftforge/forge/" target="_blank" rel="noreferrer">Forge</a>. Aun as\xED, como AMP no tiene soporte directo para Waterfall, le diremos que estamos usando Bungeecord <em>(es mentira)</em>.</p><p><img src="`+i+'" alt="AMP Creaci\xF3n Proxy"></p><p>Nos metemos a gestionar la instancia porque nos toca descargar manualmente la \xFAltima versi\xF3n de waterfall <em>(ahora y cada vez que queramos actualizar)</em> y moverla a los archivos de la instacia, cosa que deber\xEDamos de poder hacer yendo a <em>File Manager</em> y arrastrando el archivo descargado. Si no deja, como es nuestro caso, nos toca complicarnos m\xE1s la vida.</p><p>AMP ejecuta un servidor SFTP <em>(SSH File Transfer Protocol)</em> para poder gestionar los archivos de las instancias de forma m\xE1s c\xF3moda. Por defecto se ejecuta en el puerto <code>2223</code> y nos podemos conectar con el mismo usuario y contrase\xF1a que usamos para acceder al panel. Pues bien, para gestionar los archivos, utilizamos <a href="https://filezilla-project.org/" target="_blank" rel="noreferrer">FileZilla</a>, nos conectamos a <code>servermamadisimo.xyz:2223</code> con usuario y contrase\xF1a y ya podremos transferir archivos c\xF3modamente entre nuestro ordenador y el servidor.</p><p>Una vez est\xE9 el archivo, volvemos a la instancia, a <em>Configuration</em>, <em>Server Settings</em> y en <em>Server JAR</em> elegimos el archivo de waterfall. Tambi\xE9n vamos a cambiar la versi\xF3n de Java a la \xFAltima, en este caso la 18, as\xED que vamos a <em>Java and Memory</em> y editamos <em>Java Version</em>. Ahora podemos iniciarlo y ya editar los archivos de configuraci\xF3n manualmente.</p><p>A parte de los cambios hechos que voy a escribir a continuaci\xF3n, los archivos modificados est\xE1n en <a href="https://github.com/ComicIvans/server" target="_blank" rel="noreferrer">el repositorio de GitHub</a>.</p><ul><li><code>Java.MaxHeapSizeMB=1024</code></li><li><code>Java.CustomOpts=-Xms512M -Xmx512M -XX:+UseG1GC -XX:G1HeapRegionSize=4M -XX:+UnlockExperimentalVMOptions -XX:+ParallelRefProcEnabled -XX:+AlwaysPreTouch</code></li></ul><p>Estos argumentos de java, a parte de establecer la cantidad de memoria RAM que puede usar el proxy, se supone que ayudan a que rinda mejor.</p><p>Adem\xE1s, esta es la lista de plugins:</p><ul><li><a href="https://www.spigotmc.org/resources/bungeetablistplus.313/" target="_blank" rel="noreferrer">BungeeTabListPlus</a></li><li><a href="https://www.spigotmc.org/resources/bungee-chat.12592/" target="_blank" rel="noreferrer">Bungee Chat</a></li><li><a href="https://www.spigotmc.org/resources/hub-command.57584/" target="_blank" rel="noreferrer">Hub Command</a></li><li><a href="https://luckperms.net/download" target="_blank" rel="noreferrer">LuckPerms</a></li><li><a href="https://www.spigotmc.org/resources/skinsrestorer.2124/" target="_blank" rel="noreferrer">SkinsRestorer</a></li><li><a href="https://www.spigotmc.org/resources/viaversion.19254/" target="_blank" rel="noreferrer">ViaVersion</a></li><li><a href="https://www.spigotmc.org/resources/viabackwards.27448/" target="_blank" rel="noreferrer">ViaBackwards</a></li></ul><h2 id="el-primer-servidor" tabindex="-1">El primer servidor <a class="header-anchor" href="#el-primer-servidor" aria-hidden="true">#</a></h2><p>Muy bien, tenemos un proxy y si a\xF1adimos el servidor a la pantalla de multijugador de minecraft aparecer\xE1 como en l\xEDnea. Pero si intentamos conectarnos no podremos, porque no tenenemos ning\xFAn mundo al que unirnos.</p><p>Vamos a crear el primer servidor, que ser\xE1 el que tenga el mundo donde aparezcan los jugadores que se conecten.</p><p>Este servidor ser\xE1 el <strong>Lobby</strong>, y desde aqu\xED los jugadores podr\xE1n moverse entre los dem\xE1s servidores.</p><p><img src="'+t+'" alt="AMP Creaci\xF3n Lobby"></p><p>Dependiendo del tipo de servidor que queramos hacer tendremos que elegir si tener mods o plugins. Lo m\xE1s com\xFAn es querer tener plugins, as\xED que vamos a usar Purpur.</p><p>Igual que antes, a parte de los cambios escritos a continuaci\xF3n, los archivos modificados est\xE1n en <a href="https://github.com/ComicIvans/server" target="_blank" rel="noreferrer">el repositorio de GitHub</a>.</p><ul><li><code>Java.MaxHeapSizeMB=2048</code></li><li><code>Java.CustomOpts=-Xms2G -Xmx2G -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -Dusing.aikars.flags=https://mcflags.emc.gs -Daikars.new.flags=true</code></li></ul><p>Nuevamente, estos argumentos de java aumentan el rendmiento, de servidor y est\xE1n sacados de <a href="https://docs.papermc.io/paper/aikars-flags" target="_blank" rel="noreferrer">aqu\xED</a>.</p><p>Esta es la lista de plugins:</p><ul><li>as</li></ul>',44),d=[c];function p(u,m,g,h,v,f){return r(),a("div",null,d)}const q=e(l,[["render",p]]);export{y as __pageData,q as default};
