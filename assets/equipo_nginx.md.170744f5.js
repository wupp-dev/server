import{_ as s,c as e,o as a,a as n}from"./app.38ca1c03.js";const y=JSON.parse('{"title":"Nginx como servidor web","description":"","frontmatter":{"title":"Nginx como servidor web","lang":"es-ES"},"headers":[{"level":2,"title":"Instalaci\xF3n y puesta en marcha","slug":"instalacion-y-puesta-en-marcha"}],"relativePath":"equipo/nginx.md","lastUpdated":1660480978000}'),o={name:"equipo/nginx.md"},l=n(`<h1 id="nginx-como-servidor-web" tabindex="-1">Nginx como servidor web <a class="header-anchor" href="#nginx-como-servidor-web" aria-hidden="true">#</a></h1><p>Ya nos hemos encargado de poder acceder al servidor remotamente, pero eso es solo para nosotros, queda la parte m\xE1s importante, el poder ofrecer alg\xFAn tipo de servicio <em>(como puede ser una p\xE1gina web)</em>.</p><p>Para ello, necesitamos un servidor web, que se encargar\xE1 de gestionar las conexiones entrantes.</p><h2 id="instalacion-y-puesta-en-marcha" tabindex="-1">Instalaci\xF3n y puesta en marcha <a class="header-anchor" href="#instalacion-y-puesta-en-marcha" aria-hidden="true">#</a></h2><p>Para asegurarnos de tener la \xFAltima versi\xF3n siempre instalada, utilizaremos los repositorios de Nginx en vez de los del sistema operativo. Para a\xF1adirlos, podemos seguir los pasos de <a href="https://nginx.org/en/linux_packages.html#Debian" target="_blank" rel="noopener noreferrer">su web</a>, que para Debian son:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo apt install curl gnupg2 ca-certificates lsb-release debian-archive-keyring</span></span>
<span class="line"><span style="color:#A6ACCD;">$ curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null</span></span>
<span class="line"><span style="color:#A6ACCD;">$ gpg --dry-run --quiet --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Con este \xFAltimo comando verificamos que la clave es la correcta, deber\xEDa mostrarse lo siguiente:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">pub   rsa2048 2011-08-19 [SC] [expires: 2024-06-14]</span></span>
<span class="line"><span style="color:#A6ACCD;">      573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62</span></span>
<span class="line"><span style="color:#A6ACCD;">uid                      nginx signing key &lt;signing-key@nginx.com&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Nosotros hemos escogido usar los paquetes <strong>mainline</strong> en vez de los <strong>stable</strong>, la diferencia es que los primeros contienen las \xFAltimas novedades aunque pueden ser menos estables por tener caracter\xEDsticas experimentales. Para a\xF1adir el repositorio mainline, utilizamos el siguiente comando:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ echo &quot;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\</span></span>
<span class="line"><span style="color:#A6ACCD;">http://nginx.org/packages/mainline/debian \`lsb_release -cs\` nginx&quot; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    | sudo tee /etc/apt/sources.list.d/nginx.list</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Y ya ha llegado el momento de instalar Nginx:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo apt update</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo apt install nginx</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Una vez instalado, podemos iniciarlo y verificar que est\xE1 funcionando correctamente:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo systemctl start nginx</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo systemctl status nginx</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Sin embargo, queda un \xFAltimo paso, permitir los puertos <code>80</code> y <code>443</code> tanto en el rotuer como en el firewall, para el firewall escribimos:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">$ sudo ufw allow 80</span></span>
<span class="line"><span style="color:#A6ACCD;">$ sudo ufw allow 443</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Estos son los puertos de HTTP y HTTPS respectivamente.</p>`,17),p=[l];function r(i,t,c,d,g,u){return a(),e("div",null,p)}var A=s(o,[["render",r]]);export{y as __pageData,A as default};
